{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question = \"Default Question\",\n    triggerEffect\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardElement = document.querySelector('.card-content');\n    if (!cardElement) return [];\n    const cardRect = cardElement.getBoundingClientRect();\n    const cardWidth = cardRect.width;\n    const cardHeight = cardRect.height;\n    const columns = 60;\n    const rows = 30;\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = i / columns * cardWidth;\n        const baseY = j / rows * cardHeight;\n        particlesArray.push({\n          id: \"particle-\".concat(i, \"-\").concat(j, \"-\").concat(triggerEffect, \"-\").concat(Date.now()),\n          initialX: baseX,\n          initialY: baseY,\n          finalX: baseX + (Math.random() - 0.5) * cardWidth * 2,\n          finalY: baseY + (Math.random() - 0.5) * cardHeight * 2,\n          size: Math.random() * 2 + 1,\n          delay: j / rows * 0.5 + Math.random() * 0.3,\n          rotation: Math.random() * 360,\n          opacity: Math.random() * 0.5 + 0.5\n        });\n      }\n    }\n    return particlesArray;\n  }, [triggerEffect]);\n  useEffect(() => {\n    // Initial load\n    if (triggerEffect === 0) {\n      setParticles(generateParticles());\n      return;\n    }\n\n    // For transitions\n    const handleTransition = async () => {\n      // Start disintegration\n      setIsIntegrating(false);\n\n      // Wait for disintegration animation\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // Clear current particles\n      setParticles([]);\n\n      // Wait a bit before regenerating\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      // Generate new particles and start integration\n      setParticles(generateParticles());\n      setIsIntegrating(true);\n    };\n    handleTransition();\n  }, [triggerEffect, generateParticles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"card-content\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(motion.h2, {\n          className: \"question-text\",\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            delay: 0.5\n          },\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, \"content-\".concat(triggerEffect), false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: particles.map(particle => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"thanos-particle\",\n          initial: {\n            x: isIntegrating ? particle.finalX : particle.initialX,\n            y: isIntegrating ? particle.finalY : particle.initialY,\n            opacity: 0,\n            scale: 0,\n            rotate: particle.rotation\n          },\n          animate: {\n            x: isIntegrating ? particle.initialX : particle.finalX,\n            y: isIntegrating ? particle.initialY : particle.finalY,\n            opacity: isIntegrating ? particle.opacity : 0,\n            scale: isIntegrating ? 1 : 0,\n            rotate: isIntegrating ? 0 : particle.rotation\n          },\n          exit: {\n            x: particle.finalX,\n            y: particle.finalY,\n            opacity: 0,\n            scale: 0,\n            transition: {\n              duration: 0.5\n            }\n          },\n          transition: {\n            duration: 1.5,\n            delay: particle.delay,\n            ease: [0.23, 1, 0.32, 1]\n          },\n          style: {\n            width: \"\".concat(particle.size, \"px\"),\n            height: \"\".concat(particle.size, \"px\"),\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            background: '#4FD1C5',\n            borderRadius: '50%',\n            boxShadow: '0 0 4px rgba(79, 209, 197, 0.6)'\n          }\n        }, particle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"iy5NZ5YKi+/2hlmK/ITMxkADTS8=\");\n_c = MagicalQuestionCard;\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","PropTypes","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","question","triggerEffect","particles","setParticles","isIntegrating","setIsIntegrating","generateParticles","particlesArray","cardElement","document","querySelector","cardRect","getBoundingClientRect","cardWidth","width","cardHeight","height","columns","rows","i","j","baseX","baseY","push","id","concat","Date","now","initialX","initialY","finalX","Math","random","finalY","size","delay","rotation","opacity","handleTransition","Promise","resolve","setTimeout","className","children","div","initial","animate","transition","duration","h2","fileName","_jsxFileName","lineNumber","columnNumber","mode","map","particle","x","y","scale","rotate","exit","ease","style","position","left","top","background","borderRadius","boxShadow","_c","propTypes","string","number","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst MagicalQuestionCard = ({ question = \"Default Question\", triggerEffect }) => {\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardElement = document.querySelector('.card-content');\n    if (!cardElement) return [];\n    \n    const cardRect = cardElement.getBoundingClientRect();\n    const cardWidth = cardRect.width;\n    const cardHeight = cardRect.height;\n    \n    const columns = 60;\n    const rows = 30;\n    \n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = (i / columns) * cardWidth;\n        const baseY = (j / rows) * cardHeight;\n        \n        particlesArray.push({\n          id: `particle-${i}-${j}-${triggerEffect}-${Date.now()}`,\n          initialX: baseX,\n          initialY: baseY,\n          finalX: baseX + (Math.random() - 0.5) * cardWidth * 2,\n          finalY: baseY + (Math.random() - 0.5) * cardHeight * 2,\n          size: Math.random() * 2 + 1,\n          delay: (j / rows) * 0.5 + Math.random() * 0.3,\n          rotation: Math.random() * 360,\n          opacity: Math.random() * 0.5 + 0.5\n        });\n      }\n    }\n    return particlesArray;\n  }, [triggerEffect]);\n\n  useEffect(() => {\n    // Initial load\n    if (triggerEffect === 0) {\n      setParticles(generateParticles());\n      return;\n    }\n\n    // For transitions\n    const handleTransition = async () => {\n      // Start disintegration\n      setIsIntegrating(false);\n      \n      // Wait for disintegration animation\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // Clear current particles\n      setParticles([]);\n      \n      // Wait a bit before regenerating\n      await new Promise(resolve => setTimeout(resolve, 100));\n      \n      // Generate new particles and start integration\n      setParticles(generateParticles());\n      setIsIntegrating(true);\n    };\n\n    handleTransition();\n  }, [triggerEffect, generateParticles]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-wrapper\">\n        <motion.div \n          className=\"card-content\"\n          key={`content-${triggerEffect}`}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5 }}\n        >\n          <motion.h2 \n            className=\"question-text\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.5 }}\n          >\n            {question}\n          </motion.h2>\n        </motion.div>\n\n        <AnimatePresence mode=\"wait\">\n          {particles.map((particle) => (\n            <motion.div\n              key={particle.id}\n              className=\"thanos-particle\"\n              initial={{\n                x: isIntegrating ? particle.finalX : particle.initialX,\n                y: isIntegrating ? particle.finalY : particle.initialY,\n                opacity: 0,\n                scale: 0,\n                rotate: particle.rotation\n              }}\n              animate={{\n                x: isIntegrating ? particle.initialX : particle.finalX,\n                y: isIntegrating ? particle.initialY : particle.finalY,\n                opacity: isIntegrating ? particle.opacity : 0,\n                scale: isIntegrating ? 1 : 0,\n                rotate: isIntegrating ? 0 : particle.rotation\n              }}\n              exit={{\n                x: particle.finalX,\n                y: particle.finalY,\n                opacity: 0,\n                scale: 0,\n                transition: { duration: 0.5 }\n              }}\n              transition={{\n                duration: 1.5,\n                delay: particle.delay,\n                ease: [0.23, 1, 0.32, 1]\n              }}\n              style={{\n                width: `${particle.size}px`,\n                height: `${particle.size}px`,\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                background: '#4FD1C5',\n                borderRadius: '50%',\n                boxShadow: '0 0 4px rgba(79, 209, 197, 0.6)'\n              }}\n            />\n          ))}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}