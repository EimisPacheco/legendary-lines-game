{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    message,\n    triggerEffect,\n    currentCard,\n    playerName\n  } = _ref;\n  const cardRef = useRef(null);\n  const [currentCardState, setCurrentCardState] = useState('welcome'); // 'welcome' or 'question'\n\n  useEffect(() => {\n    if (cardRef.current) {\n      createParticles(cardRef.current);\n    }\n  }, [currentCard, message, triggerEffect]);\n  const createParticles = element => {\n    // Clear existing particles\n    const existingWrapper = element.querySelector('.particles-wrapper');\n    if (existingWrapper) {\n      existingWrapper.remove();\n    }\n\n    // Create particles wrapper\n    const particlesWrapper = document.createElement('div');\n    particlesWrapper.className = 'particles-wrapper';\n\n    // Get the card content element\n    const cardContent = element.querySelector('.card-content');\n    const elementBounds = element.getBoundingClientRect();\n    const contentBounds = cardContent.getBoundingClientRect();\n\n    // Calculate the actual card area relative to the parent\n    const cardTop = contentBounds.top - elementBounds.top;\n    const cardLeft = contentBounds.left - elementBounds.left;\n\n    // Create new particles with better distribution\n    for (let i = 0; i < 3000; i++) {\n      // Increased particles for better coverage\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n\n      // Distribute particles within the actual card area\n      const x = cardLeft + (Math.random() * contentBounds.width + 30);\n      const y = cardTop + (Math.random() * contentBounds.height + 20);\n\n      // Slightly larger particles\n      const size = Math.random() * 5 + 1; // 2-7px size range\n      particle.style.width = \"\".concat(size, \"px\");\n      particle.style.height = \"\".concat(size, \"px\");\n\n      // Position relative to the card\n      particle.style.left = \"\".concat(x, \"px\");\n      particle.style.top = \"\".concat(y, \"px\");\n\n      // Wider spread for initial positions\n      const angle = Math.random() * Math.PI * 2;\n      const distance = 300 + Math.random() * 200; // Much wider spread\n      const tx = Math.cos(angle) * distance;\n      const ty = Math.sin(angle) * distance;\n      particle.style.setProperty('--tx', \"\".concat(tx, \"px\"));\n      particle.style.setProperty('--ty', \"\".concat(ty, \"px\"));\n\n      // Adjusted timing for smoother effect\n      const inDelay = Math.random() * 0.5; // Shorter delay for faster start\n      const holdDelay = 1.8; // Longer hold time\n      const outDelay = holdDelay + Math.random() * 0.2;\n      particle.style.animation = \"\\n        particleAnimationIn 1.2s cubic-bezier(0.4, 0, 0.2, 1) \".concat(inDelay, \"s forwards,\\n        particleAnimationOut 1.2s cubic-bezier(0.4, 0, 0.2, 1) \").concat(outDelay, \"s forwards\\n      \");\n      particlesWrapper.appendChild(particle);\n    }\n    element.insertBefore(particlesWrapper, element.firstChild);\n  };\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n      // Send inputValue to the AI\n      sendToAI(inputValue);\n    } else {\n      console.error(\"Input value is empty\");\n    }\n  }\n\n  // Function to switch cards\n  const switchToQuestionCard = () => {\n    setCurrentCardState('question');\n  };\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: [currentCardState === 'welcome' && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"magical-card\",\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      exit: {\n        opacity: 0,\n        scale: 0.8\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [\"Welcome, \", playerName, \"! \\uD83C\\uDF1F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, \"welcome\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), currentCardState === 'question' && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"magical-card\",\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      exit: {\n        opacity: 0,\n        scale: 0.8\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: message || \"Waiting for the game to begin...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, \"question\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"rSl4QVfw6vSlBMQrZpUoLEDk6jk=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","message","triggerEffect","currentCard","playerName","cardRef","currentCardState","setCurrentCardState","current","createParticles","element","existingWrapper","querySelector","remove","particlesWrapper","document","createElement","className","cardContent","elementBounds","getBoundingClientRect","contentBounds","cardTop","top","cardLeft","left","i","particle","x","Math","random","width","y","height","size","style","concat","angle","PI","distance","tx","cos","ty","sin","setProperty","inDelay","holdDelay","outDelay","animation","appendChild","insertBefore","firstChild","handleSubmit","event","preventDefault","inputValue","target","elements","inputName","value","sendToAI","console","error","switchToQuestionCard","children","div","initial","opacity","scale","animate","exit","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\n\nconst MagicalQuestionCard = ({ message, triggerEffect, currentCard, playerName }) => {\n  const cardRef = useRef(null);\n  const [currentCardState, setCurrentCardState] = useState('welcome'); // 'welcome' or 'question'\n\n  useEffect(() => {\n    if (cardRef.current) {\n      createParticles(cardRef.current);\n    }\n  }, [currentCard, message, triggerEffect]);\n\n  const createParticles = (element) => {\n    // Clear existing particles\n    const existingWrapper = element.querySelector('.particles-wrapper');\n    if (existingWrapper) {\n      existingWrapper.remove();\n    }\n\n    // Create particles wrapper\n    const particlesWrapper = document.createElement('div');\n    particlesWrapper.className = 'particles-wrapper';\n    \n    // Get the card content element\n    const cardContent = element.querySelector('.card-content');\n    const elementBounds = element.getBoundingClientRect();\n    const contentBounds = cardContent.getBoundingClientRect();\n    \n    // Calculate the actual card area relative to the parent\n    const cardTop = contentBounds.top - elementBounds.top;\n    const cardLeft = contentBounds.left - elementBounds.left;\n    \n    // Create new particles with better distribution\n    for (let i = 0; i < 3000; i++) { // Increased particles for better coverage\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n      \n      // Distribute particles within the actual card area\n      const x = cardLeft + (Math.random() * contentBounds.width + 30 );\n      const y = cardTop + (Math.random() * contentBounds.height + 20);\n      \n      // Slightly larger particles\n      const size = Math.random() * 5 + 1; // 2-7px size range\n      particle.style.width = `${size}px`;\n      particle.style.height = `${size}px`;\n      \n      // Position relative to the card\n      particle.style.left = `${x}px`;\n      particle.style.top = `${y}px`;\n      \n      // Wider spread for initial positions\n      const angle = Math.random() * Math.PI * 2;\n      const distance = 300 + Math.random() * 200; // Much wider spread\n      const tx = Math.cos(angle) * distance;\n      const ty = Math.sin(angle) * distance;\n      particle.style.setProperty('--tx', `${tx}px`);\n      particle.style.setProperty('--ty', `${ty}px`);\n      \n      // Adjusted timing for smoother effect\n      const inDelay = Math.random() * 0.5; // Shorter delay for faster start\n      const holdDelay = 1.8; // Longer hold time\n      const outDelay = holdDelay + Math.random() * 0.2;\n      \n      particle.style.animation = `\n        particleAnimationIn 1.2s cubic-bezier(0.4, 0, 0.2, 1) ${inDelay}s forwards,\n        particleAnimationOut 1.2s cubic-bezier(0.4, 0, 0.2, 1) ${outDelay}s forwards\n      `;\n      \n      particlesWrapper.appendChild(particle);\n    }\n\n    element.insertBefore(particlesWrapper, element.firstChild);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n        // Send inputValue to the AI\n        sendToAI(inputValue);\n    } else {\n        console.error(\"Input value is empty\");\n    }\n  }\n\n  // Function to switch cards\n  const switchToQuestionCard = () => {\n    setCurrentCardState('question');\n  };\n\n  return (\n    <AnimatePresence>\n      {currentCardState === 'welcome' && (\n        <motion.div\n          key=\"welcome\"\n          className=\"magical-card\"\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 0.8 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div className=\"card-content\">\n            Welcome, {playerName}! 🌟\n          </div>\n        </motion.div>\n      )}\n      {currentCardState === 'question' && (\n        <motion.div\n          key=\"question\"\n          className=\"magical-card\"\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 0.8 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div className=\"card-content\">\n            {message || \"Waiting for the game to begin...\"}\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}