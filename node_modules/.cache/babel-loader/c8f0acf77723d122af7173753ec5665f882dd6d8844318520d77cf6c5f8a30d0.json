{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    message,\n    triggerEffect\n  } = _ref;\n  const cardRef = useRef(null);\n  useEffect(() => {\n    if (cardRef.current) {\n      createParticles(cardRef.current);\n    }\n  }, [message, triggerEffect]);\n  const createParticles = element => {\n    // Clear existing particles\n    const existingWrapper = element.querySelector('.particles-wrapper');\n    if (existingWrapper) {\n      existingWrapper.remove();\n    }\n\n    // Create particles wrapper\n    const particlesWrapper = document.createElement('div');\n    particlesWrapper.className = 'particles-wrapper';\n\n    // Use the entire card bounds instead of just the text area\n    const elementBounds = element.getBoundingClientRect();\n\n    // Create new particles\n    for (let i = 0; i < 500; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n\n      // Spread particles across the entire card\n      const padding = 20;\n      const x = padding + Math.random() * (elementBounds.width - 2 * padding);\n      const y = padding + Math.random() * (elementBounds.height - 2 * padding);\n\n      // Keep all other properties the same\n      const size = Math.random() * 4 + 2;\n      particle.style.width = \"\".concat(size, \"px\");\n      particle.style.height = \"\".concat(size, \"px\");\n      particle.style.left = \"\".concat(x, \"px\");\n      particle.style.top = \"\".concat(y, \"px\");\n      const angle = Math.random() * Math.PI * 2;\n      const distance = 150 + Math.random() * 100;\n      const tx = Math.cos(angle) * distance;\n      const ty = Math.sin(angle) * distance;\n      particle.style.setProperty('--tx', \"\".concat(tx, \"px\"));\n      particle.style.setProperty('--ty', \"\".concat(ty, \"px\"));\n      const inDelay = Math.random() * 0.5;\n      const holdDelay = 1.5;\n      const outDelay = holdDelay + Math.random() * 0.3;\n      particle.style.animation = \"\\n        particleAnimationIn 1s cubic-bezier(0.4, 0, 0.2, 1) \".concat(inDelay, \"s forwards,\\n        particleAnimationOut 1s cubic-bezier(0.4, 0, 0.2, 1) \").concat(outDelay, \"s forwards\\n      \");\n      particlesWrapper.appendChild(particle);\n    }\n    element.insertBefore(particlesWrapper, element.firstChild);\n  };\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n      // Send inputValue to the AI\n      sendToAI(inputValue);\n    } else {\n      console.error(\"Input value is empty\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: cardRef,\n      className: \"magical-card\",\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: message || \"Waiting for the game to begin...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, triggerEffect, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"6u/bLyT0WzEP0A9aknmDXb+lDH8=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useEffect","useRef","motion","AnimatePresence","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","message","triggerEffect","cardRef","current","createParticles","element","existingWrapper","querySelector","remove","particlesWrapper","document","createElement","className","elementBounds","getBoundingClientRect","i","particle","padding","x","Math","random","width","y","height","size","style","concat","left","top","angle","PI","distance","tx","cos","ty","sin","setProperty","inDelay","holdDelay","outDelay","animation","appendChild","insertBefore","firstChild","handleSubmit","event","preventDefault","inputValue","target","elements","inputName","value","sendToAI","console","error","children","div","ref","initial","opacity","scale","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\n\nconst MagicalQuestionCard = ({ message, triggerEffect }) => {\n  const cardRef = useRef(null);\n\n  useEffect(() => {\n    if (cardRef.current) {\n      createParticles(cardRef.current);\n    }\n  }, [message, triggerEffect]);\n\n  const createParticles = (element) => {\n    // Clear existing particles\n    const existingWrapper = element.querySelector('.particles-wrapper');\n    if (existingWrapper) {\n      existingWrapper.remove();\n    }\n\n    // Create particles wrapper\n    const particlesWrapper = document.createElement('div');\n    particlesWrapper.className = 'particles-wrapper';\n    \n    // Use the entire card bounds instead of just the text area\n    const elementBounds = element.getBoundingClientRect();\n    \n    // Create new particles\n    for (let i = 0; i < 500; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n      \n      // Spread particles across the entire card\n      const padding = 20;\n      const x = padding + (Math.random() * (elementBounds.width - 2 * padding));\n      const y = padding + (Math.random() * (elementBounds.height - 2 * padding));\n      \n      // Keep all other properties the same\n      const size = Math.random() * 4 + 2;\n      particle.style.width = `${size}px`;\n      particle.style.height = `${size}px`;\n      \n      particle.style.left = `${x}px`;\n      particle.style.top = `${y}px`;\n      \n      const angle = Math.random() * Math.PI * 2;\n      const distance = 150 + Math.random() * 100;\n      const tx = Math.cos(angle) * distance;\n      const ty = Math.sin(angle) * distance;\n      particle.style.setProperty('--tx', `${tx}px`);\n      particle.style.setProperty('--ty', `${ty}px`);\n      \n      const inDelay = Math.random() * 0.5;\n      const holdDelay = 1.5;\n      const outDelay = holdDelay + Math.random() * 0.3;\n      \n      particle.style.animation = `\n        particleAnimationIn 1s cubic-bezier(0.4, 0, 0.2, 1) ${inDelay}s forwards,\n        particleAnimationOut 1s cubic-bezier(0.4, 0, 0.2, 1) ${outDelay}s forwards\n      `;\n      \n      particlesWrapper.appendChild(particle);\n    }\n\n    element.insertBefore(particlesWrapper, element.firstChild);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n        // Send inputValue to the AI\n        sendToAI(inputValue);\n    } else {\n        console.error(\"Input value is empty\");\n    }\n  }\n\n  return (\n    <AnimatePresence>\n      <motion.div \n        ref={cardRef}\n        className=\"magical-card\"\n        key={triggerEffect}\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"card-content\">\n          {message || \"Waiting for the game to begin...\"}\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default MagicalQuestionCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,mBAAmB,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAAEC,OAAO;IAAEC;EAAc,CAAC,GAAAH,IAAA;EACrD,MAAMI,OAAO,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,IAAIW,OAAO,CAACC,OAAO,EAAE;MACnBC,eAAe,CAACF,OAAO,CAACC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACH,OAAO,EAAEC,aAAa,CAAC,CAAC;EAE5B,MAAMG,eAAe,GAAIC,OAAO,IAAK;IACnC;IACA,MAAMC,eAAe,GAAGD,OAAO,CAACE,aAAa,CAAC,oBAAoB,CAAC;IACnE,IAAID,eAAe,EAAE;MACnBA,eAAe,CAACE,MAAM,CAAC,CAAC;IAC1B;;IAEA;IACA,MAAMC,gBAAgB,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACtDF,gBAAgB,CAACG,SAAS,GAAG,mBAAmB;;IAEhD;IACA,MAAMC,aAAa,GAAGR,OAAO,CAACS,qBAAqB,CAAC,CAAC;;IAErD;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,QAAQ,GAAGN,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC9CK,QAAQ,CAACJ,SAAS,GAAG,iBAAiB;;MAEtC;MACA,MAAMK,OAAO,GAAG,EAAE;MAClB,MAAMC,CAAC,GAAGD,OAAO,GAAIE,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIP,aAAa,CAACQ,KAAK,GAAG,CAAC,GAAGJ,OAAO,CAAE;MACzE,MAAMK,CAAC,GAAGL,OAAO,GAAIE,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIP,aAAa,CAACU,MAAM,GAAG,CAAC,GAAGN,OAAO,CAAE;;MAE1E;MACA,MAAMO,IAAI,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MAClCJ,QAAQ,CAACS,KAAK,CAACJ,KAAK,MAAAK,MAAA,CAAMF,IAAI,OAAI;MAClCR,QAAQ,CAACS,KAAK,CAACF,MAAM,MAAAG,MAAA,CAAMF,IAAI,OAAI;MAEnCR,QAAQ,CAACS,KAAK,CAACE,IAAI,MAAAD,MAAA,CAAMR,CAAC,OAAI;MAC9BF,QAAQ,CAACS,KAAK,CAACG,GAAG,MAAAF,MAAA,CAAMJ,CAAC,OAAI;MAE7B,MAAMO,KAAK,GAAGV,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACW,EAAE,GAAG,CAAC;MACzC,MAAMC,QAAQ,GAAG,GAAG,GAAGZ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MAC1C,MAAMY,EAAE,GAAGb,IAAI,CAACc,GAAG,CAACJ,KAAK,CAAC,GAAGE,QAAQ;MACrC,MAAMG,EAAE,GAAGf,IAAI,CAACgB,GAAG,CAACN,KAAK,CAAC,GAAGE,QAAQ;MACrCf,QAAQ,CAACS,KAAK,CAACW,WAAW,CAAC,MAAM,KAAAV,MAAA,CAAKM,EAAE,OAAI,CAAC;MAC7ChB,QAAQ,CAACS,KAAK,CAACW,WAAW,CAAC,MAAM,KAAAV,MAAA,CAAKQ,EAAE,OAAI,CAAC;MAE7C,MAAMG,OAAO,GAAGlB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MACnC,MAAMkB,SAAS,GAAG,GAAG;MACrB,MAAMC,QAAQ,GAAGD,SAAS,GAAGnB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MAEhDJ,QAAQ,CAACS,KAAK,CAACe,SAAS,oEAAAd,MAAA,CACgCW,OAAO,gFAAAX,MAAA,CACNa,QAAQ,uBAChE;MAED9B,gBAAgB,CAACgC,WAAW,CAACzB,QAAQ,CAAC;IACxC;IAEAX,OAAO,CAACqC,YAAY,CAACjC,gBAAgB,EAAEJ,OAAO,CAACsC,UAAU,CAAC;EAC5D,CAAC;EAED,SAASC,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;IAC1D;IACA,IAAIJ,UAAU,EAAE;MACZ;MACAK,QAAQ,CAACL,UAAU,CAAC;IACxB,CAAC,MAAM;MACHM,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;IACzC;EACF;EAEA,oBACE1D,OAAA,CAACF,eAAe;IAAA6D,QAAA,eACd3D,OAAA,CAACH,MAAM,CAAC+D,GAAG;MACTC,GAAG,EAAEvD,OAAQ;MACbU,SAAS,EAAC,cAAc;MAExB8C,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAE;MACpCC,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAE;MAClCE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAR,QAAA,eAE9B3D,OAAA;QAAKgB,SAAS,EAAC,cAAc;QAAA2C,QAAA,EAC1BvD,OAAO,IAAI;MAAkC;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC,GAPDlE,aAAa;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEtB,CAAC;AAACpE,EAAA,CA3FIF,mBAAmB;AAAAuE,EAAA,GAAnBvE,mBAAmB;AA6FzB,eAAeA,mBAAmB;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}