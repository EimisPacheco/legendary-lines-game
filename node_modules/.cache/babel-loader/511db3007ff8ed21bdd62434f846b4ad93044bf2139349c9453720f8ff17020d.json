{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MagicalQuestionCard from './MagicalQuestionCard';\nimport '../styles/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = {\n  SONG: {\n    name: 'Song',\n    points: 1\n  },\n  MOVIE: {\n    name: 'Movie',\n    points: 2\n  },\n  FAMOUS_PERSON: {\n    name: 'Famous Person',\n    points: 3\n  },\n  FICTIONAL_CHARACTER: {\n    name: 'Fictional Character',\n    points: 3\n  },\n  BOOK: {\n    name: 'Book',\n    points: 4\n  },\n  POET: {\n    name: 'Poet',\n    points: 5\n  },\n  QUOTE: {\n    name: 'Quote',\n    points: 6\n  }\n};\nconst Game = _ref => {\n  _s();\n  let {\n    difficulty,\n    numberOfRounds\n  } = _ref;\n  const [currentPhrase, setCurrentPhrase] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [round, setRound] = useState(1);\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  useEffect(() => {\n    // Initialize first phrase\n    fetchNewPhrase();\n  }, []);\n  const fetchNewPhrase = async () => {\n    // Add your API call here to get a new phrase\n    setCurrentPhrase(\"Sample phrase for testing\");\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setTriggerEffect(prev => prev + 1);\n  };\n  const handleYearGuess = e => {\n    setYearGuess(e.target.value);\n  };\n  const handleSubmit = async () => {\n    if (!selectedCategory || !yearGuess) return;\n\n    // Add your answer checking logic here\n    const isCorrect = true; // Replace with actual check\n    const yearCorrect = true; // Replace with actual check\n\n    if (isCorrect) {\n      let points = CATEGORIES[selectedCategory].points;\n      if (yearCorrect) points *= 2;\n      if (difficulty === 'EASY') points *= 1;else if (difficulty === 'MEDIUM') points *= 1.5;else points *= 2;\n      setScore(prev => prev + points);\n      setStreak(prev => prev + 1);\n      setShowResult('correct');\n    } else {\n      setStreak(0);\n      setShowResult('wrong');\n    }\n\n    // Move to next round\n    if (round < numberOfRounds) {\n      setRound(prev => prev + 1);\n      fetchNewPhrase();\n    } else {\n      // Game over logic\n      console.log('Game Over! Final score:', score);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Round: \", round, \"/\", numberOfRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Streak: \", streak]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MagicalQuestionCard, {\n      phrase: currentPhrase,\n      triggerEffect: triggerEffect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-buttons\",\n        children: Object.entries(CATEGORIES).map(_ref2 => {\n          let [key, value] = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"category-btn \".concat(selectedCategory === key ? 'selected' : ''),\n            onClick: () => handleCategorySelect(key),\n            children: [value.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"points\",\n              children: [\"(\", value.points, \" pts)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-guess\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Guess the Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: yearGuess,\n        onChange: handleYearGuess,\n        placeholder: \"YYYY\",\n        className: \"year-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      disabled: !selectedCategory || !yearGuess,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-message \".concat(showResult),\n      children: showResult === 'correct' ? 'Correct!' : 'Wrong!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Zc4DfnzymZ0TBXv4qSfvQMPmf80=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","MagicalQuestionCard","jsxDEV","_jsxDEV","CATEGORIES","SONG","name","points","MOVIE","FAMOUS_PERSON","FICTIONAL_CHARACTER","BOOK","POET","QUOTE","Game","_ref","_s","difficulty","numberOfRounds","currentPhrase","setCurrentPhrase","selectedCategory","setSelectedCategory","yearGuess","setYearGuess","score","setScore","streak","setStreak","round","setRound","triggerEffect","setTriggerEffect","showResult","setShowResult","fetchNewPhrase","handleCategorySelect","category","prev","handleYearGuess","e","target","value","handleSubmit","isCorrect","yearCorrect","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","phrase","Object","entries","map","_ref2","key","concat","onClick","type","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MagicalQuestionCard from './MagicalQuestionCard';\nimport '../styles/Game.css';\n\nconst CATEGORIES = {\n  SONG: { name: 'Song', points: 1 },\n  MOVIE: { name: 'Movie', points: 2 },\n  FAMOUS_PERSON: { name: 'Famous Person', points: 3 },\n  FICTIONAL_CHARACTER: { name: 'Fictional Character', points: 3 },\n  BOOK: { name: 'Book', points: 4 },\n  POET: { name: 'Poet', points: 5 },\n  QUOTE: { name: 'Quote', points: 6 }\n};\n\nconst Game = ({ difficulty, numberOfRounds }) => {\n  const [currentPhrase, setCurrentPhrase] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [round, setRound] = useState(1);\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n\n  useEffect(() => {\n    // Initialize first phrase\n    fetchNewPhrase();\n  }, []);\n\n  const fetchNewPhrase = async () => {\n    // Add your API call here to get a new phrase\n    setCurrentPhrase(\"Sample phrase for testing\");\n  };\n\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n    setTriggerEffect(prev => prev + 1);\n  };\n\n  const handleYearGuess = (e) => {\n    setYearGuess(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedCategory || !yearGuess) return;\n\n    // Add your answer checking logic here\n    const isCorrect = true; // Replace with actual check\n    const yearCorrect = true; // Replace with actual check\n\n    if (isCorrect) {\n      let points = CATEGORIES[selectedCategory].points;\n      if (yearCorrect) points *= 2;\n      \n      if (difficulty === 'EASY') points *= 1;\n      else if (difficulty === 'MEDIUM') points *= 1.5;\n      else points *= 2;\n\n      setScore(prev => prev + points);\n      setStreak(prev => prev + 1);\n      setShowResult('correct');\n    } else {\n      setStreak(0);\n      setShowResult('wrong');\n    }\n\n    // Move to next round\n    if (round < numberOfRounds) {\n      setRound(prev => prev + 1);\n      fetchNewPhrase();\n    } else {\n      // Game over logic\n      console.log('Game Over! Final score:', score);\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <div>Round: {round}/{numberOfRounds}</div>\n        <div>Score: {score}</div>\n        <div>Streak: {streak}</div>\n      </div>\n\n      <MagicalQuestionCard \n        phrase={currentPhrase}\n        triggerEffect={triggerEffect}\n      />\n\n      <div className=\"category-selector\">\n        <h3>Select Category:</h3>\n        <div className=\"category-buttons\">\n          {Object.entries(CATEGORIES).map(([key, value]) => (\n            <button\n              key={key}\n              className={`category-btn ${selectedCategory === key ? 'selected' : ''}`}\n              onClick={() => handleCategorySelect(key)}\n            >\n              {value.name}\n              <span className=\"points\">({value.points} pts)</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"year-guess\">\n        <h3>Guess the Year:</h3>\n        <input\n          type=\"number\"\n          value={yearGuess}\n          onChange={handleYearGuess}\n          placeholder=\"YYYY\"\n          className=\"year-input\"\n        />\n      </div>\n\n      <button \n        className=\"submit-btn\"\n        onClick={handleSubmit}\n        disabled={!selectedCategory || !yearGuess}\n      >\n        Submit Answer\n      </button>\n\n      {showResult && (\n        <div className={`result-message ${showResult}`}>\n          {showResult === 'correct' ? 'Correct!' : 'Wrong!'}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}