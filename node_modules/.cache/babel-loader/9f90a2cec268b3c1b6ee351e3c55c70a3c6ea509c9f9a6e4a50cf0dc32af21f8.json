{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateStars = () => {\n  const stars = [];\n  for (let i = 0; i < 50; i++) {\n    const randomX = Math.random() * 100; // Random position X\n    const randomY = Math.random() * 100; // Random position Y\n    const delay = Math.random() * 2; // Random animation delay\n\n    stars.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star\",\n      style: {\n        left: \"\".concat(randomX, \"%\"),\n        top: \"\".concat(randomY, \"%\"),\n        animationDelay: \"\".concat(delay, \"s\")\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this));\n  }\n  return stars;\n};\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question\n  } = _ref;\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    if (question) {\n      setShow(true);\n      setTimeout(() => setShow(false), 5000);\n    }\n  }, [question]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container \".concat(show ? \"show\" : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-field\",\n      children: show && generateStars()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateStars","stars","i","randomX","Math","random","randomY","delay","push","className","style","left","concat","top","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","MagicalQuestionCard","_ref","_s","question","show","setShow","setTimeout","children","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\n\n\nconst generateStars = () => {\n  const stars = [];\n  for (let i = 0; i < 50; i++) {\n    const randomX = Math.random() * 100; // Random position X\n    const randomY = Math.random() * 100; // Random position Y\n    const delay = Math.random() * 2; // Random animation delay\n\n    stars.push(\n      <div\n        key={i}\n        className=\"star\"\n        style={{\n          left: `${randomX}%`,\n          top: `${randomY}%`,\n          animationDelay: `${delay}s`,\n        }}\n      ></div>\n    );\n  }\n  return stars;\n};\n\nconst MagicalQuestionCard = ({ question }) => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (question) {\n      setShow(true);\n      setTimeout(() => setShow(false), 5000);\n    }\n  }, [question]);\n\n  return (\n    <div className={`card-container ${show ? \"show\" : \"\"}`}>\n      <div className=\"star-field\">{show && generateStars()}</div>\n      <div className=\"card-content\">\n        <h2 className=\"question-text\">{question}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default MagicalQuestionCard;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACrC,MAAMC,OAAO,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACrC,MAAME,KAAK,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEjCJ,KAAK,CAACO,IAAI,cACRT,OAAA;MAEEU,SAAS,EAAC,MAAM;MAChBC,KAAK,EAAE;QACLC,IAAI,KAAAC,MAAA,CAAKT,OAAO,MAAG;QACnBU,GAAG,KAAAD,MAAA,CAAKN,OAAO,MAAG;QAClBQ,cAAc,KAAAF,MAAA,CAAKL,KAAK;MAC1B;IAAE,GANGL,CAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOF,CACR,CAAC;EACH;EACA,OAAOjB,KAAK;AACd,CAAC;AAED,MAAMkB,mBAAmB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,IAAIyB,QAAQ,EAAE;MACZE,OAAO,CAAC,IAAI,CAAC;MACbC,UAAU,CAAC,MAAMD,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IACxC;EACF,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACEvB,OAAA;IAAKU,SAAS,oBAAAG,MAAA,CAAoBW,IAAI,GAAG,MAAM,GAAG,EAAE,CAAG;IAAAG,QAAA,gBACrD3B,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAiB,QAAA,EAAEH,IAAI,IAAIvB,aAAa,CAAC;IAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3DnB,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAiB,QAAA,eAC3B3B,OAAA;QAAIU,SAAS,EAAC,eAAe;QAAAiB,QAAA,EAAEJ;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,CAlBIF,mBAAmB;AAAAQ,EAAA,GAAnBR,mBAAmB;AAoBzB,eAAeA,mBAAmB;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}