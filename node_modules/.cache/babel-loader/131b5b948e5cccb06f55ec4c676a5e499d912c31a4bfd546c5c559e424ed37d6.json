{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question = \"Default Question\",\n    triggerEffect\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  const [isVisible, setIsVisible] = useState(true);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardWidth = 600;\n    const cardHeight = 300;\n    const columns = 60;\n    const rows = 30;\n    const cellWidth = cardWidth / columns;\n    const cellHeight = cardHeight / rows;\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = i / columns * cardWidth;\n        const baseY = j / rows * cardHeight;\n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          const randomOffsetX = Math.random() * cellWidth * 0.8;\n          const randomOffsetY = Math.random() * cellHeight * 0.8;\n          particlesArray.push({\n            id: \"particle-\".concat(i, \"-\").concat(j, \"-\").concat(k),\n            initialX: baseX + randomOffsetX,\n            initialY: baseY + randomOffsetY,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: j / rows * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, []);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsVisible(false);\n\n      // Wait for disintegration to complete\n      setTimeout(() => {\n        setIsIntegrating(true);\n        setParticles(generateParticles());\n        setIsVisible(true);\n      }, 2000);\n    }\n  }, [triggerEffect, generateParticles]);\n\n  // Handle initial load and reintegration timing\n  useEffect(() => {\n    if (isVisible && isIntegrating) {\n      const timer = setTimeout(() => {\n        setIsIntegrating(false);\n      }, 2500);\n      return () => clearTimeout(timer);\n    }\n  }, [isVisible, isIntegrating]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"card-content\",\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          },\n          transition: {\n            duration: 0.5\n          },\n          children: /*#__PURE__*/_jsxDEV(motion.h2, {\n            className: \"question-text\",\n            initial: {\n              opacity: 0\n            },\n            animate: {\n              opacity: 1\n            },\n            transition: {\n              delay: 1.2\n            },\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"particles-wrapper\",\n          children: particles.map(particle => /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"thanos-particle\",\n            initial: {\n              x: isIntegrating ? particle.finalX : particle.initialX,\n              y: isIntegrating ? particle.finalY : particle.initialY,\n              opacity: 0,\n              scale: 0,\n              rotate: particle.rotation\n            },\n            animate: {\n              x: isIntegrating ? particle.initialX : particle.finalX,\n              y: isIntegrating ? particle.initialY : particle.finalY,\n              opacity: isIntegrating ? particle.opacity : 0,\n              scale: isIntegrating ? 1 : 0,\n              rotate: isIntegrating ? 0 : particle.rotation\n            },\n            exit: {\n              x: particle.finalX,\n              y: particle.finalY,\n              opacity: 0,\n              scale: 0,\n              rotate: particle.rotation\n            },\n            transition: {\n              duration: 1.8,\n              delay: particle.delay,\n              ease: [0.23, 1, 0.32, 1]\n            },\n            style: {\n              width: \"\".concat(particle.size, \"px\"),\n              height: \"\".concat(particle.size, \"px\"),\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              transform: \"translate(\".concat(particle.initialX, \"px, \").concat(particle.initialY, \"px)\")\n            }\n          }, particle.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"GKnRK/XXqEieKdzqelOtuVwjyGs=\");\n_c = MagicalQuestionCard;\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","PropTypes","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","question","triggerEffect","particles","setParticles","isVisible","setIsVisible","isIntegrating","setIsIntegrating","generateParticles","particlesArray","cardWidth","cardHeight","columns","rows","cellWidth","cellHeight","i","j","baseX","baseY","particlesPerCell","k","randomOffsetX","Math","random","randomOffsetY","push","id","concat","initialX","initialY","finalX","finalY","size","delay","opacity","rotation","setTimeout","timer","clearTimeout","className","children","mode","div","initial","animate","exit","transition","duration","h2","fileName","_jsxFileName","lineNumber","columnNumber","map","particle","x","y","scale","rotate","ease","style","width","height","position","left","top","transform","_c","propTypes","string","number","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst MagicalQuestionCard = ({ question = \"Default Question\", triggerEffect }) => {\n  const [particles, setParticles] = useState([]);\n  const [isVisible, setIsVisible] = useState(true);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardWidth = 600;\n    const cardHeight = 300;\n    \n    const columns = 60;\n    const rows = 30;\n    const cellWidth = cardWidth / columns;\n    const cellHeight = cardHeight / rows;\n\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = (i / columns) * cardWidth;\n        const baseY = (j / rows) * cardHeight;\n        \n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          const randomOffsetX = Math.random() * cellWidth * 0.8;\n          const randomOffsetY = Math.random() * cellHeight * 0.8;\n\n          particlesArray.push({\n            id: `particle-${i}-${j}-${k}`,\n            initialX: baseX + randomOffsetX,\n            initialY: baseY + randomOffsetY,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: (j / rows) * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, []);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsVisible(false);\n      \n      // Wait for disintegration to complete\n      setTimeout(() => {\n        setIsIntegrating(true);\n        setParticles(generateParticles());\n        setIsVisible(true);\n      }, 2000);\n    }\n  }, [triggerEffect, generateParticles]);\n\n  // Handle initial load and reintegration timing\n  useEffect(() => {\n    if (isVisible && isIntegrating) {\n      const timer = setTimeout(() => {\n        setIsIntegrating(false);\n      }, 2500);\n      return () => clearTimeout(timer);\n    }\n  }, [isVisible, isIntegrating]);\n\n  return (\n    <div className=\"card-container\">\n      <AnimatePresence mode=\"wait\">\n        {isVisible && (\n          <div className=\"card-wrapper\">\n            <motion.div \n              className=\"card-content\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.5 }}\n            >\n              <motion.h2 \n                className=\"question-text\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 1.2 }}\n              >\n                {question}\n              </motion.h2>\n            </motion.div>\n\n            <div className=\"particles-wrapper\">\n              {particles.map((particle) => (\n                <motion.div\n                  key={particle.id}\n                  className=\"thanos-particle\"\n                  initial={{\n                    x: isIntegrating ? particle.finalX : particle.initialX,\n                    y: isIntegrating ? particle.finalY : particle.initialY,\n                    opacity: 0,\n                    scale: 0,\n                    rotate: particle.rotation\n                  }}\n                  animate={{\n                    x: isIntegrating ? particle.initialX : particle.finalX,\n                    y: isIntegrating ? particle.initialY : particle.finalY,\n                    opacity: isIntegrating ? particle.opacity : 0,\n                    scale: isIntegrating ? 1 : 0,\n                    rotate: isIntegrating ? 0 : particle.rotation\n                  }}\n                  exit={{\n                    x: particle.finalX,\n                    y: particle.finalY,\n                    opacity: 0,\n                    scale: 0,\n                    rotate: particle.rotation\n                  }}\n                  transition={{\n                    duration: 1.8,\n                    delay: particle.delay,\n                    ease: [0.23, 1, 0.32, 1]\n                  }}\n                  style={{\n                    width: `${particle.size}px`,\n                    height: `${particle.size}px`,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    transform: `translate(${particle.initialX}px, ${particle.initialY}px)`\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}