{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question = \"Default Question\",\n    triggerEffect\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const [isVisible, setIsVisible] = useState(true);\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardElement = document.querySelector('.card-content');\n    if (!cardElement) return particlesArray;\n    const cardRect = cardElement.getBoundingClientRect();\n    const cardWidth = cardRect.width;\n    const cardHeight = cardRect.height;\n    const columns = 60;\n    const rows = 30;\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = i / columns * cardWidth;\n        const baseY = j / rows * cardHeight;\n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          particlesArray.push({\n            id: \"particle-\".concat(i, \"-\").concat(j, \"-\").concat(k, \"-\").concat(triggerEffect),\n            initialX: baseX + Math.random() * (cardWidth / columns) * 0.8,\n            initialY: baseY + Math.random() * (cardHeight / rows) * 0.8,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: j / rows * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, [triggerEffect]);\n\n  // Initial load effect\n  useEffect(() => {\n    if (triggerEffect === 0) {\n      const timer = setTimeout(() => {\n        setParticles(generateParticles());\n        setIsIntegrating(true);\n        setIsVisible(true);\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [generateParticles, triggerEffect]);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsIntegrating(false);\n      const disintegrationTimer = setTimeout(() => {\n        setIsVisible(false);\n\n        // Start integration of new particles\n        const integrationTimer = setTimeout(() => {\n          setParticles(generateParticles());\n          setIsIntegrating(true);\n          setIsVisible(true);\n        }, 200);\n        return () => clearTimeout(integrationTimer);\n      }, 1500);\n      return () => clearTimeout(disintegrationTimer);\n    }\n  }, [triggerEffect, generateParticles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"card-content\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(motion.h2, {\n          className: \"question-text\",\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            delay: 0.8\n          },\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, \"content-\".concat(triggerEffect), false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"particles-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          children: isVisible && particles.map(particle => /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"thanos-particle\",\n            initial: {\n              x: isIntegrating ? particle.finalX : particle.initialX,\n              y: isIntegrating ? particle.finalY : particle.initialY,\n              opacity: 0,\n              scale: 0,\n              rotate: particle.rotation\n            },\n            animate: {\n              x: isIntegrating ? particle.initialX : particle.finalX,\n              y: isIntegrating ? particle.initialY : particle.finalY,\n              opacity: isIntegrating ? particle.opacity : 0,\n              scale: isIntegrating ? 1 : 0,\n              rotate: isIntegrating ? 0 : particle.rotation\n            },\n            exit: {\n              x: particle.finalX,\n              y: particle.finalY,\n              opacity: 0,\n              scale: 0,\n              transition: {\n                duration: 0.5\n              }\n            },\n            transition: {\n              duration: 1.5,\n              delay: particle.delay,\n              ease: [0.23, 1, 0.32, 1]\n            },\n            style: {\n              width: \"\".concat(particle.size, \"px\"),\n              height: \"\".concat(particle.size, \"px\"),\n              position: 'absolute',\n              left: 0,\n              top: 0\n            }\n          }, particle.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"RudIGuM9WwuKndq+gz6JtbW0G5Y=\");\n_c = MagicalQuestionCard;\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","PropTypes","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","question","triggerEffect","particles","setParticles","isIntegrating","setIsIntegrating","isVisible","setIsVisible","generateParticles","particlesArray","cardElement","document","querySelector","cardRect","getBoundingClientRect","cardWidth","width","cardHeight","height","columns","rows","i","j","baseX","baseY","particlesPerCell","k","push","id","concat","initialX","Math","random","initialY","finalX","finalY","size","delay","opacity","rotation","timer","setTimeout","clearTimeout","disintegrationTimer","integrationTimer","className","children","div","initial","animate","exit","transition","duration","h2","fileName","_jsxFileName","lineNumber","columnNumber","mode","map","particle","x","y","scale","rotate","ease","style","position","left","top","_c","propTypes","string","number","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst MagicalQuestionCard = ({ question = \"Default Question\", triggerEffect }) => {\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const [isVisible, setIsVisible] = useState(true);\n\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardElement = document.querySelector('.card-content');\n    if (!cardElement) return particlesArray;\n    \n    const cardRect = cardElement.getBoundingClientRect();\n    const cardWidth = cardRect.width;\n    const cardHeight = cardRect.height;\n    \n    const columns = 60;\n    const rows = 30;\n    \n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = (i / columns) * cardWidth;\n        const baseY = (j / rows) * cardHeight;\n        \n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          particlesArray.push({\n            id: `particle-${i}-${j}-${k}-${triggerEffect}`,\n            initialX: baseX + Math.random() * (cardWidth / columns) * 0.8,\n            initialY: baseY + Math.random() * (cardHeight / rows) * 0.8,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: (j / rows) * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, [triggerEffect]);\n\n  // Initial load effect\n  useEffect(() => {\n    if (triggerEffect === 0) {\n      const timer = setTimeout(() => {\n        setParticles(generateParticles());\n        setIsIntegrating(true);\n        setIsVisible(true);\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [generateParticles, triggerEffect]);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsIntegrating(false);\n      \n      const disintegrationTimer = setTimeout(() => {\n        setIsVisible(false);\n        \n        // Start integration of new particles\n        const integrationTimer = setTimeout(() => {\n          setParticles(generateParticles());\n          setIsIntegrating(true);\n          setIsVisible(true);\n        }, 200);\n        \n        return () => clearTimeout(integrationTimer);\n      }, 1500);\n      \n      return () => clearTimeout(disintegrationTimer);\n    }\n  }, [triggerEffect, generateParticles]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-wrapper\">\n        <motion.div \n          key={`content-${triggerEffect}`}\n          className=\"card-content\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <motion.h2 \n            className=\"question-text\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.8 }}\n          >\n            {question}\n          </motion.h2>\n        </motion.div>\n\n        <div className=\"particles-wrapper\">\n          <AnimatePresence mode=\"wait\">\n            {isVisible && particles.map((particle) => (\n              <motion.div\n                key={particle.id}\n                className=\"thanos-particle\"\n                initial={{\n                  x: isIntegrating ? particle.finalX : particle.initialX,\n                  y: isIntegrating ? particle.finalY : particle.initialY,\n                  opacity: 0,\n                  scale: 0,\n                  rotate: particle.rotation\n                }}\n                animate={{\n                  x: isIntegrating ? particle.initialX : particle.finalX,\n                  y: isIntegrating ? particle.initialY : particle.finalY,\n                  opacity: isIntegrating ? particle.opacity : 0,\n                  scale: isIntegrating ? 1 : 0,\n                  rotate: isIntegrating ? 0 : particle.rotation\n                }}\n                exit={{\n                  x: particle.finalX,\n                  y: particle.finalY,\n                  opacity: 0,\n                  scale: 0,\n                  transition: { duration: 0.5 }\n                }}\n                transition={{\n                  duration: 1.5,\n                  delay: particle.delay,\n                  ease: [0.23, 1, 0.32, 1]\n                }}\n                style={{\n                  width: `${particle.size}px`,\n                  height: `${particle.size}px`,\n                  position: 'absolute',\n                  left: 0,\n                  top: 0\n                }}\n              />\n            ))}\n          </AnimatePresence>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\n\nexport default MagicalQuestionCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,mBAAmB,GAAGC,IAAA,IAAsD;EAAAC,EAAA;EAAA,IAArD;IAAEC,QAAQ,GAAG,kBAAkB;IAAEC;EAAc,CAAC,GAAAH,IAAA;EAC3E,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMmB,iBAAiB,GAAGjB,WAAW,CAAC,MAAM;IAC1C,MAAMkB,cAAc,GAAG,EAAE;IACzB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;IAC3D,IAAI,CAACF,WAAW,EAAE,OAAOD,cAAc;IAEvC,MAAMI,QAAQ,GAAGH,WAAW,CAACI,qBAAqB,CAAC,CAAC;IACpD,MAAMC,SAAS,GAAGF,QAAQ,CAACG,KAAK;IAChC,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,MAAM;IAElC,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,IAAI,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,EAAEE,CAAC,EAAE,EAAE;MAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,EAAEE,CAAC,EAAE,EAAE;QAC7B,MAAMC,KAAK,GAAIF,CAAC,GAAGF,OAAO,GAAIJ,SAAS;QACvC,MAAMS,KAAK,GAAIF,CAAC,GAAGF,IAAI,GAAIH,UAAU;QAErC,MAAMQ,gBAAgB,GAAG,CAAC;QAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,gBAAgB,EAAEC,CAAC,EAAE,EAAE;UACzCjB,cAAc,CAACkB,IAAI,CAAC;YAClBC,EAAE,cAAAC,MAAA,CAAcR,CAAC,OAAAQ,MAAA,CAAIP,CAAC,OAAAO,MAAA,CAAIH,CAAC,OAAAG,MAAA,CAAI5B,aAAa,CAAE;YAC9C6B,QAAQ,EAAEP,KAAK,GAAGQ,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIjB,SAAS,GAAGI,OAAO,CAAC,GAAG,GAAG;YAC7Dc,QAAQ,EAAET,KAAK,GAAGO,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIf,UAAU,GAAGG,IAAI,CAAC,GAAG,GAAG;YAC3Dc,MAAM,EAAEX,KAAK,GAAG,CAACQ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIjB,SAAS,GAAG,GAAG;YACvDoB,MAAM,EAAEX,KAAK,GAAGO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGf,UAAU,GAAG,CAAC;YAC9CmB,IAAI,EAAEL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;YAC3BK,KAAK,EAAGf,CAAC,GAAGF,IAAI,GAAI,GAAG,GAAGW,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;YAC7CM,OAAO,EAAEP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;YAClCO,QAAQ,EAAER,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;UAC5B,CAAC,CAAC;QACJ;MACF;IACF;IACA,OAAOvB,cAAc;EACvB,CAAC,EAAE,CAACR,aAAa,CAAC,CAAC;;EAEnB;EACAX,SAAS,CAAC,MAAM;IACd,IAAIW,aAAa,KAAK,CAAC,EAAE;MACvB,MAAMuC,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BtC,YAAY,CAACK,iBAAiB,CAAC,CAAC,CAAC;QACjCH,gBAAgB,CAAC,IAAI,CAAC;QACtBE,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,EAAE,GAAG,CAAC;MACP,OAAO,MAAMmC,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAChC,iBAAiB,EAAEP,aAAa,CAAC,CAAC;;EAEtC;EACAX,SAAS,CAAC,MAAM;IACd,IAAIW,aAAa,GAAG,CAAC,EAAE;MACrB;MACAI,gBAAgB,CAAC,KAAK,CAAC;MAEvB,MAAMsC,mBAAmB,GAAGF,UAAU,CAAC,MAAM;QAC3ClC,YAAY,CAAC,KAAK,CAAC;;QAEnB;QACA,MAAMqC,gBAAgB,GAAGH,UAAU,CAAC,MAAM;UACxCtC,YAAY,CAACK,iBAAiB,CAAC,CAAC,CAAC;UACjCH,gBAAgB,CAAC,IAAI,CAAC;UACtBE,YAAY,CAAC,IAAI,CAAC;QACpB,CAAC,EAAE,GAAG,CAAC;QAEP,OAAO,MAAMmC,YAAY,CAACE,gBAAgB,CAAC;MAC7C,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMF,YAAY,CAACC,mBAAmB,CAAC;IAChD;EACF,CAAC,EAAE,CAAC1C,aAAa,EAAEO,iBAAiB,CAAC,CAAC;EAEtC,oBACEZ,OAAA;IAAKiD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BlD,OAAA;MAAKiD,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlD,OAAA,CAACJ,MAAM,CAACuD,GAAG;QAETF,SAAS,EAAC,cAAc;QACxBG,OAAO,EAAE;UAAEV,OAAO,EAAE;QAAE,CAAE;QACxBW,OAAO,EAAE;UAAEX,OAAO,EAAE;QAAE,CAAE;QACxBY,IAAI,EAAE;UAAEZ,OAAO,EAAE;QAAE,CAAE;QACrBa,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAN,QAAA,eAE9BlD,OAAA,CAACJ,MAAM,CAAC6D,EAAE;UACRR,SAAS,EAAC,eAAe;UACzBG,OAAO,EAAE;YAAEV,OAAO,EAAE;UAAE,CAAE;UACxBW,OAAO,EAAE;YAAEX,OAAO,EAAE;UAAE,CAAE;UACxBa,UAAU,EAAE;YAAEd,KAAK,EAAE;UAAI,CAAE;UAAAS,QAAA,EAE1B9C;QAAQ;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC,cAAA5B,MAAA,CAdI5B,aAAa;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAenB,CAAC,eAEb7D,OAAA;QAAKiD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChClD,OAAA,CAACH,eAAe;UAACiE,IAAI,EAAC,MAAM;UAAAZ,QAAA,EACzBxC,SAAS,IAAIJ,SAAS,CAACyD,GAAG,CAAEC,QAAQ,iBACnChE,OAAA,CAACJ,MAAM,CAACuD,GAAG;YAETF,SAAS,EAAC,iBAAiB;YAC3BG,OAAO,EAAE;cACPa,CAAC,EAAEzD,aAAa,GAAGwD,QAAQ,CAAC1B,MAAM,GAAG0B,QAAQ,CAAC9B,QAAQ;cACtDgC,CAAC,EAAE1D,aAAa,GAAGwD,QAAQ,CAACzB,MAAM,GAAGyB,QAAQ,CAAC3B,QAAQ;cACtDK,OAAO,EAAE,CAAC;cACVyB,KAAK,EAAE,CAAC;cACRC,MAAM,EAAEJ,QAAQ,CAACrB;YACnB,CAAE;YACFU,OAAO,EAAE;cACPY,CAAC,EAAEzD,aAAa,GAAGwD,QAAQ,CAAC9B,QAAQ,GAAG8B,QAAQ,CAAC1B,MAAM;cACtD4B,CAAC,EAAE1D,aAAa,GAAGwD,QAAQ,CAAC3B,QAAQ,GAAG2B,QAAQ,CAACzB,MAAM;cACtDG,OAAO,EAAElC,aAAa,GAAGwD,QAAQ,CAACtB,OAAO,GAAG,CAAC;cAC7CyB,KAAK,EAAE3D,aAAa,GAAG,CAAC,GAAG,CAAC;cAC5B4D,MAAM,EAAE5D,aAAa,GAAG,CAAC,GAAGwD,QAAQ,CAACrB;YACvC,CAAE;YACFW,IAAI,EAAE;cACJW,CAAC,EAAED,QAAQ,CAAC1B,MAAM;cAClB4B,CAAC,EAAEF,QAAQ,CAACzB,MAAM;cAClBG,OAAO,EAAE,CAAC;cACVyB,KAAK,EAAE,CAAC;cACRZ,UAAU,EAAE;gBAAEC,QAAQ,EAAE;cAAI;YAC9B,CAAE;YACFD,UAAU,EAAE;cACVC,QAAQ,EAAE,GAAG;cACbf,KAAK,EAAEuB,QAAQ,CAACvB,KAAK;cACrB4B,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;YACzB,CAAE;YACFC,KAAK,EAAE;cACLlD,KAAK,KAAAa,MAAA,CAAK+B,QAAQ,CAACxB,IAAI,OAAI;cAC3BlB,MAAM,KAAAW,MAAA,CAAK+B,QAAQ,CAACxB,IAAI,OAAI;cAC5B+B,QAAQ,EAAE,UAAU;cACpBC,IAAI,EAAE,CAAC;cACPC,GAAG,EAAE;YACP;UAAE,GAlCGT,QAAQ,CAAChC,EAAE;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmCjB,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CA/IIF,mBAAmB;AAAAyE,EAAA,GAAnBzE,mBAAmB;AAiJzBA,mBAAmB,CAAC0E,SAAS,GAAG;EAC9BvE,QAAQ,EAAEN,SAAS,CAAC8E,MAAM;EAC1BvE,aAAa,EAAEP,SAAS,CAAC+E;AAC3B,CAAC;AAED,eAAe5E,mBAAmB;AAAC,IAAAyE,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}