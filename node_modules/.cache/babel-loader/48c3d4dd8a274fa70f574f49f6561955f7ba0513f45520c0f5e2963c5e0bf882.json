{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 80; i++) {\n    const size = Math.random() * 10 + 5;\n    const randomX = Math.random() * 200 - 50; // Range: -50% to 150%\n    const randomY = Math.random() * 200 - 50; // Range: -50% to 150%\n    const delay = Math.random() * 1.5;\n    particles.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-particle\",\n      style: {\n        left: \"\".concat(randomX, \"%\"),\n        top: \"\".concat(randomY, \"%\"),\n        width: \"\".concat(size, \"px\"),\n        height: \"\".concat(size, \"px\"),\n        animationDelay: \"\".concat(delay, \"s\")\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this));\n  }\n  return particles;\n};\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    questions = []\n  } = _ref;\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    if (questions.length > 0) {\n      setShow(true);\n      const timer = setTimeout(() => setShow(false), 5000);\n      return () => clearTimeout(timer); // Cleanup timeout\n    }\n  }, [currentQuestionIndex]); // Triggers every time the question index changes\n\n  const handleNextQuestion = () => {\n    setShow(false); // Reset the animation\n    setTimeout(() => {\n      setCurrentQuestionIndex(prevIndex => (prevIndex + 1) % questions.length); // Move to the next question\n    }, 200); // Small delay to create a seamless reset effect\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container \".concat(show ? \"show\" : \"\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dust-field\",\n          children: show && generateDustParticles()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question-text\",\n            children: questions[currentQuestionIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"qB/JtdCceFR6DW3gTK+uCn7qb74=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateDustParticles","particles","i","size","Math","random","randomX","randomY","delay","push","className","style","left","concat","top","width","height","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","MagicalQuestionCard","_ref","_s","questions","currentQuestionIndex","setCurrentQuestionIndex","show","setShow","length","timer","setTimeout","clearTimeout","handleNextQuestion","prevIndex","children","onClick","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 80; i++) {\n    const size = Math.random() * 10 + 5;\n    const randomX = Math.random() * 200 - 50; // Range: -50% to 150%\n    const randomY = Math.random() * 200 - 50; // Range: -50% to 150%\n    const delay = Math.random() * 1.5;\n\n    particles.push(\n      <div\n        key={i}\n        className=\"dust-particle\"\n        style={{\n          left: `${randomX}%`,\n          top: `${randomY}%`,\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDelay: `${delay}s`,\n        }}\n      ></div>\n    );\n  }\n  return particles;\n};\n\nconst MagicalQuestionCard = ({ questions = [] }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (questions.length > 0) {\n      setShow(true);\n      const timer = setTimeout(() => setShow(false), 5000);\n      return () => clearTimeout(timer); // Cleanup timeout\n    }\n  }, [currentQuestionIndex]); // Triggers every time the question index changes\n\n  const handleNextQuestion = () => {\n    setShow(false); // Reset the animation\n    setTimeout(() => {\n      setCurrentQuestionIndex((prevIndex) => (prevIndex + 1) % questions.length); // Move to the next question\n    }, 200); // Small delay to create a seamless reset effect\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"card-wrapper\">\n        <div className={`card-container ${show ? \"show\" : \"\"}`}>\n          <div className=\"dust-field\">{show && generateDustParticles()}</div>\n          <div className=\"card-content\">\n            <h2 className=\"question-text\">{questions[currentQuestionIndex]}</h2>\n          </div>\n        </div>\n      </div>\n      <div className=\"next-button-container\">\n        <button className=\"next-button\" onClick={handleNextQuestion}>\n          Next Question\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MagicalQuestionCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}