{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../styles/MagicalQuestionCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    phrase,\n    triggerEffect\n  } = _ref;\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const particles = [];\n    const container = containerRef.current;\n    const particleCount = 50;\n\n    // Clear existing particles\n    const existingParticles = container.querySelectorAll('.thanos-particle');\n    existingParticles.forEach(particle => particle.remove());\n\n    // Create new particles\n    for (let i = 0; i < particleCount; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n      particle.style.setProperty('--tx', \"\".concat((Math.random() - 0.5) * 200, \"%\"));\n      particle.style.setProperty('--ty', \"\".concat((Math.random() - 0.5) * 200, \"%\"));\n      particle.style.width = \"\".concat(Math.random() * 4 + 2, \"px\");\n      particle.style.height = particle.style.width;\n      particle.style.left = \"\".concat(Math.random() * 100, \"%\");\n      particle.style.top = \"\".concat(Math.random() * 100, \"%\");\n      particle.style.backgroundColor = '#FF9F1C'; // Set particle color to orange\n      particles.push(particle);\n      container.appendChild(particle);\n    }\n\n    // Animate particles\n    requestAnimationFrame(() => {\n      particles.forEach(particle => {\n        particle.style.animation = 'particleAnimation 1s ease-out forwards';\n      });\n    });\n  }, [triggerEffect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: '#FF9F1C'\n          },\n          children: phrase || 'Default Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"particles-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","phrase","triggerEffect","containerRef","current","particles","container","particleCount","existingParticles","querySelectorAll","forEach","particle","remove","i","document","createElement","className","style","setProperty","concat","Math","random","width","height","left","top","backgroundColor","push","appendChild","requestAnimationFrame","animation","children","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport '../styles/MagicalQuestionCard.css';\n\nconst MagicalQuestionCard = ({ phrase, triggerEffect }) => {\n  const containerRef = useRef(null);\n  \n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const particles = [];\n    const container = containerRef.current;\n    const particleCount = 50;\n    \n    // Clear existing particles\n    const existingParticles = container.querySelectorAll('.thanos-particle');\n    existingParticles.forEach(particle => particle.remove());\n    \n    // Create new particles\n    for (let i = 0; i < particleCount; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n      particle.style.setProperty('--tx', `${(Math.random() - 0.5) * 200}%`);\n      particle.style.setProperty('--ty', `${(Math.random() - 0.5) * 200}%`);\n      particle.style.width = `${Math.random() * 4 + 2}px`;\n      particle.style.height = particle.style.width;\n      particle.style.left = `${Math.random() * 100}%`;\n      particle.style.top = `${Math.random() * 100}%`;\n      particle.style.backgroundColor = '#FF9F1C'; // Set particle color to orange\n      particles.push(particle);\n      container.appendChild(particle);\n    }\n    \n    // Animate particles\n    requestAnimationFrame(() => {\n      particles.forEach(particle => {\n        particle.style.animation = 'particleAnimation 1s ease-out forwards';\n      });\n    });\n  }, [triggerEffect]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-content\">\n        <div className=\"question-content\">\n          <h2 style={{ color: '#FF9F1C' }}>{phrase || 'Default Question'}</h2>\n        </div>\n      </div>\n      <div ref={containerRef} className=\"particles-container\" />\n    </div>\n  );\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}