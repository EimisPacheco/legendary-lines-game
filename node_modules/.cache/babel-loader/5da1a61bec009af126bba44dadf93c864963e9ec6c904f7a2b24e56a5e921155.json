{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 100; i++) {\n    const size = Math.random() * 8 + 3; // Particles are between 3px to 11px\n    const randomX = Math.random() * 100; // X position (from 0% to 100%)\n    const randomY = Math.random() * 100; // Y position (from 0% to 100%)\n    const delay = Math.random() * 1; // Each particle has a different delay for randomness\n\n    particles.push(/*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"dust-particle\",\n      initial: {\n        opacity: 0,\n        x: \"\".concat(randomX, \"%\"),\n        y: \"\".concat(randomY, \"%\"),\n        scale: 0\n      },\n      animate: {\n        opacity: 1,\n        x: \"50%\",\n        y: \"50%\",\n        scale: 1\n      },\n      transition: {\n        delay,\n        duration: 1\n      },\n      style: {\n        width: \"\".concat(size, \"px\"),\n        height: \"\".concat(size, \"px\")\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  }\n  return particles;\n};\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    if (question) {\n      setShow(true);\n      setParticles(generateDustParticles());\n      setTimeout(() => setShow(false), 5000); // Optional: hide after 5 seconds\n    }\n  }, [question]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container \".concat(show ? \"show\" : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-field\",\n      children: show && particles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"ejT3a7TV+x6DEgRJ0TtkvzDT4hE=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","generateDustParticles","particles","i","size","Math","random","randomX","randomY","delay","push","div","className","initial","opacity","x","concat","y","scale","animate","transition","duration","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","MagicalQuestionCard","_ref","_s","question","setParticles","show","setShow","setTimeout","children","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 100; i++) {\n    const size = Math.random() * 8 + 3; // Particles are between 3px to 11px\n    const randomX = Math.random() * 100; // X position (from 0% to 100%)\n    const randomY = Math.random() * 100; // Y position (from 0% to 100%)\n    const delay = Math.random() * 1; // Each particle has a different delay for randomness\n\n    particles.push(\n      <motion.div\n        key={i}\n        className=\"dust-particle\"\n        initial={{ opacity: 0, x: `${randomX}%`, y: `${randomY}%`, scale: 0 }}\n        animate={{ opacity: 1, x: \"50%\", y: \"50%\", scale: 1 }}\n        transition={{ delay, duration: 1 }}\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n        }}\n      />\n    );\n  }\n  return particles;\n};\n\nconst MagicalQuestionCard = ({ question }) => {\n  const [particles, setParticles] = useState([]);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (question) {\n      setShow(true);\n      setParticles(generateDustParticles());\n      setTimeout(() => setShow(false), 5000); // Optional: hide after 5 seconds\n    }\n  }, [question]);\n\n  return (\n    <div className={`card-container ${show ? \"show\" : \"\"}`}>\n      <div className=\"dust-field\">{show && particles}</div>\n      <div className=\"card-content\">\n        <h2 className=\"question-text\">{question}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}