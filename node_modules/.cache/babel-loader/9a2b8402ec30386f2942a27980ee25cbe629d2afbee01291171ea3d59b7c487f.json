{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question = \"Default Question\",\n    triggerEffect\n  } = _ref;\n  const [dustParticles, setDustParticles] = useState([]);\n  const [showDust, setShowDust] = useState(false);\n  const generateDustParticles = useCallback(() => {\n    return Array.from({\n      length: 80\n    }, (_, i) => ({\n      id: i,\n      size: Math.random() * 10 + 5,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      delay: Math.random() * 1.5\n    }));\n  }, []);\n  useEffect(() => {\n    setShowDust(true);\n    setDustParticles(generateDustParticles());\n    const timer = setTimeout(() => setShowDust(false), 2000);\n    return () => clearTimeout(timer);\n  }, [question, triggerEffect, generateDustParticles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), showDust && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-field\",\n      children: dustParticles.map(particle => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dust-particle\",\n        style: {\n          left: \"\".concat(particle.x, \"%\"),\n          top: \"\".concat(particle.y, \"%\"),\n          width: \"\".concat(particle.size, \"px\"),\n          height: \"\".concat(particle.size, \"px\"),\n          animationDelay: \"\".concat(particle.delay, \"s\")\n        }\n      }, particle.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"Oc11++HyEZ2lFYPJd8tVmCbVzu4=\");\n_c = MagicalQuestionCard;\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","PropTypes","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","question","triggerEffect","dustParticles","setDustParticles","showDust","setShowDust","generateDustParticles","Array","from","length","_","i","id","size","Math","random","x","y","delay","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","particle","style","left","concat","top","width","height","animationDelay","_c","propTypes","string","number","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst MagicalQuestionCard = ({ question = \"Default Question\", triggerEffect }) => {\n  const [dustParticles, setDustParticles] = useState([]);\n  const [showDust, setShowDust] = useState(false);\n\n  const generateDustParticles = useCallback(() => {\n    return Array.from({ length: 80 }, (_, i) => ({\n      id: i,\n      size: Math.random() * 10 + 5,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      delay: Math.random() * 1.5\n    }));\n  }, []);\n\n  useEffect(() => {\n    setShowDust(true);\n    setDustParticles(generateDustParticles());\n    \n    const timer = setTimeout(() => setShowDust(false), 2000);\n    return () => clearTimeout(timer);\n  }, [question, triggerEffect, generateDustParticles]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-content\">\n        <h2 className=\"question-text\">{question}</h2>\n      </div>\n      {showDust && (\n        <div className=\"dust-field\">\n          {dustParticles.map(particle => (\n            <div\n              key={particle.id}\n              className=\"dust-particle\"\n              style={{\n                left: `${particle.x}%`,\n                top: `${particle.y}%`,\n                width: `${particle.size}px`,\n                height: `${particle.size}px`,\n                animationDelay: `${particle.delay}s`,\n              }}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}