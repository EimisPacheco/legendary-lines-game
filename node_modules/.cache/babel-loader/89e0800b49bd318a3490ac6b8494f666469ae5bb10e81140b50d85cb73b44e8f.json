{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    message,\n    triggerEffect\n  } = _ref;\n  const cardRef = useRef(null);\n  useEffect(() => {\n    if (cardRef.current) {\n      createParticles(cardRef.current);\n    }\n  }, [message, triggerEffect]);\n  const createParticles = element => {\n    // Clear existing particles\n    const existingWrapper = element.querySelector('.particles-wrapper');\n    if (existingWrapper) {\n      existingWrapper.remove();\n    }\n\n    // Create particles wrapper\n    const particlesWrapper = document.createElement('div');\n    particlesWrapper.className = 'particles-wrapper';\n\n    // Get the card bounds\n    const cardBounds = element.getBoundingClientRect();\n    const width = cardBounds.width;\n    const height = cardBounds.height;\n\n    // Calculate total number of particles\n    const totalParticles = 2000;\n\n    // Create particles with improved distribution\n    for (let i = 0; i < totalParticles; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n\n      // Use polar coordinates for better distribution\n      const radius = Math.sqrt(Math.random()) * Math.min(width, height) * 0.5;\n      const theta = Math.random() * 2 * Math.PI;\n\n      // Convert to cartesian coordinates (centered in card)\n      const x = width / 2 + radius * Math.cos(theta);\n      const y = height / 2 + radius * Math.sin(theta);\n\n      // Consistent small particle size\n      const size = Math.random() * 2 + 1; // 1-3px\n      particle.style.width = \"\".concat(size, \"px\");\n      particle.style.height = \"\".concat(size, \"px\");\n\n      // Set final position\n      particle.style.left = \"\".concat(x, \"px\");\n      particle.style.top = \"\".concat(y, \"px\");\n\n      // Calculate starting position (from outside)\n      const startRadius = Math.min(width, height) * 0.7; // Increased distance\n      const startX = width / 2 + startRadius * Math.cos(theta);\n      const startY = height / 2 + startRadius * Math.sin(theta);\n      const tx = startX - x;\n      const ty = startY - y;\n      particle.style.setProperty('--tx', \"\".concat(tx, \"px\"));\n      particle.style.setProperty('--ty', \"\".concat(ty, \"px\"));\n\n      // Animation timing\n      const inDelay = Math.random() * 0.3;\n      const outDelay = 2.0 + Math.random() * 0.3; // Increased delay before out animation\n\n      particle.style.animation = \"\\n        particleAnimationIn 0.8s ease-out \".concat(inDelay, \"s forwards,\\n        particleAnimationOut 0.8s ease-in \").concat(outDelay, \"s forwards\\n      \");\n      particlesWrapper.appendChild(particle);\n    }\n    element.insertBefore(particlesWrapper, element.firstChild);\n  };\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n      // Send inputValue to the AI\n      sendToAI(inputValue);\n    } else {\n      console.error(\"Input value is empty\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    mode: \"wait\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: cardRef,\n      className: \"magical-card\",\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      exit: {\n        opacity: 0,\n        scale: 0.8\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: message || \"Waiting for the game to begin...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, message || triggerEffect, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"6u/bLyT0WzEP0A9aknmDXb+lDH8=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useEffect","useRef","motion","AnimatePresence","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","message","triggerEffect","cardRef","current","createParticles","element","existingWrapper","querySelector","remove","particlesWrapper","document","createElement","className","cardBounds","getBoundingClientRect","width","height","totalParticles","i","particle","radius","Math","sqrt","random","min","theta","PI","x","cos","y","sin","size","style","concat","left","top","startRadius","startX","startY","tx","ty","setProperty","inDelay","outDelay","animation","appendChild","insertBefore","firstChild","handleSubmit","event","preventDefault","inputValue","target","elements","inputName","value","sendToAI","console","error","mode","children","div","ref","initial","opacity","scale","animate","exit","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\n\nconst MagicalQuestionCard = ({ message, triggerEffect }) => {\n  const cardRef = useRef(null);\n\n  useEffect(() => {\n    if (cardRef.current) {\n      createParticles(cardRef.current);\n    }\n  }, [message, triggerEffect]);\n\n  const createParticles = (element) => {\n    // Clear existing particles\n    const existingWrapper = element.querySelector('.particles-wrapper');\n    if (existingWrapper) {\n      existingWrapper.remove();\n    }\n\n    // Create particles wrapper\n    const particlesWrapper = document.createElement('div');\n    particlesWrapper.className = 'particles-wrapper';\n    \n    // Get the card bounds\n    const cardBounds = element.getBoundingClientRect();\n    const width = cardBounds.width;\n    const height = cardBounds.height;\n    \n    // Calculate total number of particles\n    const totalParticles = 2000;\n    \n    // Create particles with improved distribution\n    for (let i = 0; i < totalParticles; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'thanos-particle';\n      \n      // Use polar coordinates for better distribution\n      const radius = Math.sqrt(Math.random()) * Math.min(width, height) * 0.5;\n      const theta = Math.random() * 2 * Math.PI;\n      \n      // Convert to cartesian coordinates (centered in card)\n      const x = (width / 2) + radius * Math.cos(theta);\n      const y = (height / 2) + radius * Math.sin(theta);\n      \n      // Consistent small particle size\n      const size = Math.random() * 2 + 1; // 1-3px\n      particle.style.width = `${size}px`;\n      particle.style.height = `${size}px`;\n      \n      // Set final position\n      particle.style.left = `${x}px`;\n      particle.style.top = `${y}px`;\n      \n      // Calculate starting position (from outside)\n      const startRadius = Math.min(width, height) * 0.7; // Increased distance\n      const startX = (width / 2) + startRadius * Math.cos(theta);\n      const startY = (height / 2) + startRadius * Math.sin(theta);\n      \n      const tx = startX - x;\n      const ty = startY - y;\n      \n      particle.style.setProperty('--tx', `${tx}px`);\n      particle.style.setProperty('--ty', `${ty}px`);\n      \n      // Animation timing\n      const inDelay = Math.random() * 0.3;\n      const outDelay = 2.0 + Math.random() * 0.3; // Increased delay before out animation\n      \n      particle.style.animation = `\n        particleAnimationIn 0.8s ease-out ${inDelay}s forwards,\n        particleAnimationOut 0.8s ease-in ${outDelay}s forwards\n      `;\n      \n      particlesWrapper.appendChild(particle);\n    }\n\n    element.insertBefore(particlesWrapper, element.firstChild);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n        // Send inputValue to the AI\n        sendToAI(inputValue);\n    } else {\n        console.error(\"Input value is empty\");\n    }\n  }\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div \n        ref={cardRef}\n        className=\"magical-card\"\n        key={message || triggerEffect}\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        exit={{ opacity: 0, scale: 0.8 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"card-content\">\n          {message || \"Waiting for the game to begin...\"}\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}