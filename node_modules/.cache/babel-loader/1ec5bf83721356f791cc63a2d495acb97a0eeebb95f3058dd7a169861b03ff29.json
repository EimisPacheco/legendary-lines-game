{"ast":null,"code":"import _objectSpread from \"/Users/eimis/test-server/react_projects/cloud-architecture-game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/GamePresenter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MagicalQuestionCard from \"./MagicalQuestionCard\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport useSound from 'use-sound';\nimport correctSound from '../assets/sounds/correct.mp3';\nimport wrongSound from '../assets/sounds/wrong.mp3';\nimport confetti from 'canvas-confetti';\nimport { getPhrase, checkAnswer } from '../services/aiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = {\n  SONG: {\n    name: 'Song',\n    points: 1\n  },\n  MOVIE: {\n    name: 'Movie',\n    points: 2\n  },\n  FAMOUS_PERSON: {\n    name: 'Famous Person',\n    points: 3\n  },\n  FICTIONAL_CHARACTER: {\n    name: 'Fictional Character',\n    points: 3\n  },\n  BOOK: {\n    name: 'Book',\n    points: 4\n  },\n  POET: {\n    name: 'Poet',\n    points: 5\n  },\n  QUOTE: {\n    name: 'Quote',\n    points: 6\n  }\n};\nconst DIFFICULTIES = {\n  EASY: {\n    color: '#4CAF50',\n    multiplier: 1,\n    particles: {\n      particleCount: 50,\n      spread: 45,\n      colors: ['#4CAF50', '#81C784']\n    },\n    animation: {\n      scale: 1.05,\n      transition: {\n        duration: 0.3\n      }\n    }\n  },\n  MEDIUM: {\n    color: '#FFC107',\n    multiplier: 1.5,\n    particles: {\n      particleCount: 100,\n      spread: 70,\n      colors: ['#FFC107', '#FFD54F']\n    },\n    animation: {\n      scale: 1.1,\n      rotate: [0, 5, -5, 0],\n      transition: {\n        duration: 0.5\n      }\n    }\n  },\n  HARD: {\n    color: '#F44336',\n    multiplier: 2,\n    particles: {\n      particleCount: 150,\n      spread: 100,\n      colors: ['#F44336', '#EF5350'],\n      startVelocity: 45\n    },\n    animation: {\n      scale: 1.15,\n      rotate: [0, 10, -10, 0],\n      transition: {\n        duration: 0.7\n      }\n    }\n  }\n};\nconst GamePresenter = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [numberOfRounds, setNumberOfRounds] = useState(5);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPhrase, setCurrentPhrase] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [difficulty, setDifficulty] = useState('MEDIUM');\n  const [retryCount, setRetryCount] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [progressiveScore, setProgressiveScore] = useState(0);\n  const [streakCount, setStreakCount] = useState(0);\n  const [playCorrect] = useSound(correctSound);\n  const [playWrong] = useSound(wrongSound);\n  const startGame = () => {\n    setGameStarted(true);\n    // Here we'll add the API call to get the first phrase\n  };\n  const handleError = (error, action) => {\n    var _error$response, _error$response2, _error$response3;\n    console.error(\"Error during \".concat(action, \":\"), error);\n    if (error.message.includes('API key')) {\n      setErrorMessage('API configuration error. Please check your settings.');\n    } else if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429) {\n      setErrorMessage('Too many requests. Please wait a moment and try again.');\n    } else {\n      setErrorMessage(\"Failed to \".concat(action, \". Please try again.\"));\n    }\n\n    // Auto-retry for certain errors\n    if (retryCount < 3 && (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 429 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 503)) {\n      setRetryCount(prev => prev + 1);\n      setTimeout(() => handleCategorySelect(selectedCategory), 2000 * Math.pow(2, retryCount));\n    }\n  };\n  const handleCategorySelect = async category => {\n    setLoading(true);\n    setErrorMessage(null);\n    try {\n      const phraseData = await getPhrase(category, difficulty);\n      setCurrentPhrase(phraseData);\n      setSelectedCategory(category);\n      setTriggerEffect(prev => prev + 1);\n      setRetryCount(0); // Reset retry count on success\n    } catch (error) {\n      handleError(error, 'fetch phrase');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleYearGuess = e => {\n    setYearGuess(e.target.value);\n  };\n  const submitGuess = async (userAnswer, yearGuess) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await checkAnswer(userAnswer, currentPhrase, selectedCategory);\n      if (result.isCorrect) {\n        playCorrect();\n        confetti({\n          particleCount: 100,\n          spread: 70,\n          origin: {\n            y: 0.6\n          }\n        });\n\n        // Calculate points\n        let points = CATEGORIES[selectedCategory].points;\n        if (parseInt(yearGuess) === currentPhrase.year) {\n          points *= 2; // Double points for correct year\n        }\n        setScore(prev => prev + points);\n\n        // Show success message\n        setShowResult({\n          correct: true,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      } else {\n        playWrong();\n        setShowResult({\n          correct: false,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      }\n    } catch (err) {\n      setError('Failed to check answer. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculatePoints = (result, yearCorrect) => {\n    const basePoints = CATEGORIES[selectedCategory].points;\n    const difficultyMultiplier = DIFFICULTIES[difficulty].multiplier;\n    let points = basePoints * difficultyMultiplier;\n\n    // Add partial credit if available\n    if (result.partialCredit && result.partialCredit > 0) {\n      points *= result.partialCredit / 100;\n    }\n\n    // Double points for correct year\n    if (yearCorrect) points *= 2;\n    return Math.round(points);\n  };\n  const triggerDifficultyEffect = (difficulty, correct) => {\n    if (!correct) return;\n    const config = DIFFICULTIES[difficulty].particles;\n    confetti(_objectSpread(_objectSpread({}, config), {}, {\n      origin: {\n        y: 0.6\n      },\n      gravity: 1.5,\n      scalar: 1.2,\n      ticks: 200\n    }));\n  };\n  const updateDifficultyBasedOnProgress = () => {\n    if (streakCount >= 3 && progressiveScore >= 50) {\n      setDifficulty('HARD');\n    } else if (streakCount >= 2 && progressiveScore >= 25) {\n      setDifficulty('MEDIUM');\n    }\n  };\n  const handleCorrectAnswer = points => {\n    setStreakCount(prev => prev + 1);\n    setProgressiveScore(prev => prev + points);\n    updateDifficultyBasedOnProgress();\n\n    // Trigger appropriate difficulty effect\n    triggerDifficultyEffect(difficulty, true);\n  };\n  const handleWrongAnswer = () => {\n    setStreakCount(0);\n    // Optionally reduce progressive score\n    setProgressiveScore(prev => Math.max(0, prev - 5));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [!gameStarted ? /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      className: \"game-setup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Legendary Lines Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"difficulty-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-buttons\",\n          children: Object.keys(DIFFICULTIES).map(diff => /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            className: \"difficulty-btn \".concat(difficulty === diff ? 'selected' : ''),\n            style: {\n              backgroundColor: DIFFICULTIES[diff].color,\n              opacity: difficulty === diff ? 1 : 0.7\n            },\n            onClick: () => setDifficulty(diff),\n            children: [diff, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"multiplier\",\n              children: [DIFFICULTIES[diff].multiplier, \"x points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, diff, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounds-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of Rounds:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: numberOfRounds,\n          onChange: e => setNumberOfRounds(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"start-btn\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Round \", currentIndex + 1, \" of \", numberOfRounds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MagicalQuestionCard, {\n        question: (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.phrase) || \"Select a category to begin\",\n        triggerEffect: triggerEffect,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-grid\",\n        children: Object.entries(CATEGORIES).map(_ref => {\n          let [key, category] = _ref;\n          return /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            className: \"category-btn \".concat(selectedCategory === key ? 'selected' : ''),\n            onClick: () => handleCategorySelect(key),\n            children: [category.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"points\",\n              children: [\"(\", category.points, \" pts)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), selectedCategory && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"guess-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your answer...\",\n          className: \"answer-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-guess\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Year (optional)\",\n            value: yearGuess,\n            onChange: handleYearGuess,\n            className: \"year-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bonus-text\",\n            children: \"Double points for correct year!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitGuess(),\n          className: \"submit-btn\",\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this), loading && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"loading-spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: errorMessage && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        className: \"error-message\",\n        children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setErrorMessage(null),\n          className: \"dismiss-error\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePresenter, \"i16rc28xXf50zIQV98gU59lt/Ig=\", false, function () {\n  return [useSound, useSound];\n});\n_c = GamePresenter;\nexport default GamePresenter;\nvar _c;\n$RefreshReg$(_c, \"GamePresenter\");","map":{"version":3,"names":["React","useState","useEffect","MagicalQuestionCard","motion","AnimatePresence","useSound","correctSound","wrongSound","confetti","getPhrase","checkAnswer","jsxDEV","_jsxDEV","Fragment","_Fragment","CATEGORIES","SONG","name","points","MOVIE","FAMOUS_PERSON","FICTIONAL_CHARACTER","BOOK","POET","QUOTE","DIFFICULTIES","EASY","color","multiplier","particles","particleCount","spread","colors","animation","scale","transition","duration","MEDIUM","rotate","HARD","startVelocity","GamePresenter","_s","currentIndex","setCurrentIndex","score","setScore","selectedCategory","setSelectedCategory","numberOfRounds","setNumberOfRounds","gameStarted","setGameStarted","currentPhrase","setCurrentPhrase","yearGuess","setYearGuess","triggerEffect","setTriggerEffect","showResult","setShowResult","loading","setLoading","error","setError","difficulty","setDifficulty","retryCount","setRetryCount","errorMessage","setErrorMessage","progressiveScore","setProgressiveScore","streakCount","setStreakCount","playCorrect","playWrong","startGame","handleError","action","_error$response","_error$response2","_error$response3","console","concat","message","includes","response","status","prev","setTimeout","handleCategorySelect","Math","pow","category","phraseData","handleYearGuess","e","target","value","submitGuess","userAnswer","result","isCorrect","origin","y","parseInt","year","correct","explanation","similarity","err","calculatePoints","yearCorrect","basePoints","difficultyMultiplier","partialCredit","round","triggerDifficultyEffect","config","_objectSpread","gravity","scalar","ticks","updateDifficultyBasedOnProgress","handleCorrectAnswer","handleWrongAnswer","max","className","children","div","initial","opacity","animate","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","diff","button","whileHover","whileTap","style","backgroundColor","onClick","type","min","onChange","question","phrase","entries","_ref","key","placeholder","exit","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/GamePresenter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MagicalQuestionCard from \"./MagicalQuestionCard\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport useSound from 'use-sound';\nimport correctSound from '../assets/sounds/correct.mp3';\nimport wrongSound from '../assets/sounds/wrong.mp3';\nimport confetti from 'canvas-confetti';\nimport { getPhrase, checkAnswer } from '../services/aiService';\n\nconst CATEGORIES = {\n  SONG: { name: 'Song', points: 1 },\n  MOVIE: { name: 'Movie', points: 2 },\n  FAMOUS_PERSON: { name: 'Famous Person', points: 3 },\n  FICTIONAL_CHARACTER: { name: 'Fictional Character', points: 3 },\n  BOOK: { name: 'Book', points: 4 },\n  POET: { name: 'Poet', points: 5 },\n  QUOTE: { name: 'Quote', points: 6 }\n};\n\nconst DIFFICULTIES = {\n  EASY: { \n    color: '#4CAF50', \n    multiplier: 1,\n    particles: {\n      particleCount: 50,\n      spread: 45,\n      colors: ['#4CAF50', '#81C784']\n    },\n    animation: {\n      scale: 1.05,\n      transition: { duration: 0.3 }\n    }\n  },\n  MEDIUM: { \n    color: '#FFC107', \n    multiplier: 1.5,\n    particles: {\n      particleCount: 100,\n      spread: 70,\n      colors: ['#FFC107', '#FFD54F']\n    },\n    animation: {\n      scale: 1.1,\n      rotate: [0, 5, -5, 0],\n      transition: { duration: 0.5 }\n    }\n  },\n  HARD: { \n    color: '#F44336', \n    multiplier: 2,\n    particles: {\n      particleCount: 150,\n      spread: 100,\n      colors: ['#F44336', '#EF5350'],\n      startVelocity: 45\n    },\n    animation: {\n      scale: 1.15,\n      rotate: [0, 10, -10, 0],\n      transition: { duration: 0.7 }\n    }\n  }\n};\n\nconst GamePresenter = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [numberOfRounds, setNumberOfRounds] = useState(5);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPhrase, setCurrentPhrase] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [difficulty, setDifficulty] = useState('MEDIUM');\n  const [retryCount, setRetryCount] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [progressiveScore, setProgressiveScore] = useState(0);\n  const [streakCount, setStreakCount] = useState(0);\n\n  const [playCorrect] = useSound(correctSound);\n  const [playWrong] = useSound(wrongSound);\n\n  const startGame = () => {\n    setGameStarted(true);\n    // Here we'll add the API call to get the first phrase\n  };\n\n  const handleError = (error, action) => {\n    console.error(`Error during ${action}:`, error);\n    \n    if (error.message.includes('API key')) {\n      setErrorMessage('API configuration error. Please check your settings.');\n    } else if (error.response?.status === 429) {\n      setErrorMessage('Too many requests. Please wait a moment and try again.');\n    } else {\n      setErrorMessage(`Failed to ${action}. Please try again.`);\n    }\n\n    // Auto-retry for certain errors\n    if (retryCount < 3 && (error.response?.status === 429 || error.response?.status === 503)) {\n      setRetryCount(prev => prev + 1);\n      setTimeout(() => handleCategorySelect(selectedCategory), 2000 * Math.pow(2, retryCount));\n    }\n  };\n\n  const handleCategorySelect = async (category) => {\n    setLoading(true);\n    setErrorMessage(null);\n    \n    try {\n      const phraseData = await getPhrase(category, difficulty);\n      setCurrentPhrase(phraseData);\n      setSelectedCategory(category);\n      setTriggerEffect(prev => prev + 1);\n      setRetryCount(0); // Reset retry count on success\n    } catch (error) {\n      handleError(error, 'fetch phrase');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleYearGuess = (e) => {\n    setYearGuess(e.target.value);\n  };\n\n  const submitGuess = async (userAnswer, yearGuess) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await checkAnswer(userAnswer, currentPhrase, selectedCategory);\n      \n      if (result.isCorrect) {\n        playCorrect();\n        confetti({\n          particleCount: 100,\n          spread: 70,\n          origin: { y: 0.6 }\n        });\n        \n        // Calculate points\n        let points = CATEGORIES[selectedCategory].points;\n        if (parseInt(yearGuess) === currentPhrase.year) {\n          points *= 2; // Double points for correct year\n        }\n        setScore(prev => prev + points);\n        \n        // Show success message\n        setShowResult({\n          correct: true,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      } else {\n        playWrong();\n        setShowResult({\n          correct: false,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      }\n      \n    } catch (err) {\n      setError('Failed to check answer. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculatePoints = (result, yearCorrect) => {\n    const basePoints = CATEGORIES[selectedCategory].points;\n    const difficultyMultiplier = DIFFICULTIES[difficulty].multiplier;\n    let points = basePoints * difficultyMultiplier;\n    \n    // Add partial credit if available\n    if (result.partialCredit && result.partialCredit > 0) {\n      points *= (result.partialCredit / 100);\n    }\n    \n    // Double points for correct year\n    if (yearCorrect) points *= 2;\n    \n    return Math.round(points);\n  };\n\n  const triggerDifficultyEffect = (difficulty, correct) => {\n    if (!correct) return;\n    \n    const config = DIFFICULTIES[difficulty].particles;\n    confetti({\n      ...config,\n      origin: { y: 0.6 },\n      gravity: 1.5,\n      scalar: 1.2,\n      ticks: 200\n    });\n  };\n\n  const updateDifficultyBasedOnProgress = () => {\n    if (streakCount >= 3 && progressiveScore >= 50) {\n      setDifficulty('HARD');\n    } else if (streakCount >= 2 && progressiveScore >= 25) {\n      setDifficulty('MEDIUM');\n    }\n  };\n\n  const handleCorrectAnswer = (points) => {\n    setStreakCount(prev => prev + 1);\n    setProgressiveScore(prev => prev + points);\n    updateDifficultyBasedOnProgress();\n    \n    // Trigger appropriate difficulty effect\n    triggerDifficultyEffect(difficulty, true);\n  };\n\n  const handleWrongAnswer = () => {\n    setStreakCount(0);\n    // Optionally reduce progressive score\n    setProgressiveScore(prev => Math.max(0, prev - 5));\n  };\n\n  return (\n    <div className=\"game-container\">\n      {!gameStarted ? (\n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className=\"game-setup\"\n        >\n          <h1>Legendary Lines Game</h1>\n          \n          {/* Difficulty Selection */}\n          <div className=\"difficulty-selector\">\n            <h3>Select Difficulty:</h3>\n            <div className=\"difficulty-buttons\">\n              {Object.keys(DIFFICULTIES).map(diff => (\n                <motion.button\n                  key={diff}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  className={`difficulty-btn ${difficulty === diff ? 'selected' : ''}`}\n                  style={{ \n                    backgroundColor: DIFFICULTIES[diff].color,\n                    opacity: difficulty === diff ? 1 : 0.7 \n                  }}\n                  onClick={() => setDifficulty(diff)}\n                >\n                  {diff}\n                  <span className=\"multiplier\">\n                    {DIFFICULTIES[diff].multiplier}x points\n                  </span>\n                </motion.button>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"rounds-selector\">\n            <label>Number of Rounds:</label>\n            <input \n              type=\"number\" \n              min=\"1\" \n              max=\"20\" \n              value={numberOfRounds}\n              onChange={(e) => setNumberOfRounds(parseInt(e.target.value))}\n            />\n          </div>\n          <button onClick={startGame} className=\"start-btn\">\n            Start Game\n          </button>\n        </motion.div>\n      ) : (\n        <>\n          <div className=\"game-header\">\n            <h2>Score: {score}</h2>\n            <h3>Round {currentIndex + 1} of {numberOfRounds}</h3>\n          </div>\n\n          <MagicalQuestionCard \n            question={currentPhrase?.phrase || \"Select a category to begin\"} \n            triggerEffect={triggerEffect}\n            loading={loading}\n          />\n\n          <div className=\"categories-grid\">\n            {Object.entries(CATEGORIES).map(([key, category]) => (\n              <motion.button\n                key={key}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                className={`category-btn ${selectedCategory === key ? 'selected' : ''}`}\n                onClick={() => handleCategorySelect(key)}\n              >\n                {category.name}\n                <span className=\"points\">({category.points} pts)</span>\n              </motion.button>\n            ))}\n          </div>\n\n          {selectedCategory && (\n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"guess-section\"\n            >\n              <input\n                type=\"text\"\n                placeholder=\"Enter your answer...\"\n                className=\"answer-input\"\n              />\n              <div className=\"year-guess\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Year (optional)\"\n                  value={yearGuess}\n                  onChange={handleYearGuess}\n                  className=\"year-input\"\n                />\n                <span className=\"bonus-text\">Double points for correct year!</span>\n              </div>\n              <button \n                onClick={() => submitGuess()} \n                className=\"submit-btn\"\n              >\n                Submit Answer\n              </button>\n            </motion.div>\n          )}\n\n          {/* Show loading state */}\n          {loading && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"loading-spinner\"\n            >\n              Loading...\n            </motion.div>\n          )}\n          \n          {/* Show error state */}\n          {error && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"error-message\"\n            >\n              {error}\n            </motion.div>\n          )}\n        </>\n      )}\n\n      {/* Error Message Display */}\n      <AnimatePresence>\n        {errorMessage && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            className=\"error-message\"\n          >\n            {errorMessage}\n            <button \n              onClick={() => setErrorMessage(null)}\n              className=\"dismiss-error\"\n            >\n              ✕\n            </button>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default GamePresenter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}