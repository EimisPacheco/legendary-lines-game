{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _templateObject,\n  _templateObject2,\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 300px;\\n  height: 200px;\\n\"])));\n_c = CardContainer;\nconst Card = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  background-color: white;\\n  border-radius: 10px;\\n  padding: 20px;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n\"])));\n_c2 = Card;\nconst AnimatedAppearance = _ref => {\n  _s();\n  let {\n    children,\n    duration = 2000,\n    particleCount = 1000\n  } = _ref;\n  const canvasRef = useRef(null);\n  const cardRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const card = cardRef.current;\n    const rect = card.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n    const particles = Array(particleCount).fill().map(() => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      size: Math.random() * 3 + 1,\n      speedX: (Math.random() - 0.5) * 3,\n      speedY: (Math.random() - 0.5) * 3\n    }));\n    let animationFrame;\n    const startTime = performance.now();\n    const animate = currentTime => {\n      const progress = (currentTime - startTime) / duration;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        const targetX = canvas.width / 2;\n        const targetY = canvas.height / 2;\n        particle.x += (targetX - particle.x) * 0.05 + particle.speedX * (1 - progress);\n        particle.y += (targetY - particle.y) * 0.05 + particle.speedY * (1 - progress);\n        ctx.fillStyle = \"rgba(240, 240, 240, \".concat(1 - progress, \")\");\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size * (1 - progress), 0, Math.PI * 2);\n        ctx.fill();\n      });\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n    animationFrame = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationFrame);\n  }, [duration, particleCount]);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      ref: cardRef,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedAppearance, \"aQNFsZptYbQn4e0xrXpa3UBUgO8=\");\n_c3 = AnimatedAppearance;\nconst MagicalQuestionCard = _ref2 => {\n  let {\n    question,\n    animationDuration,\n    particleCount\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(AnimatedAppearance, {\n    duration: animationDuration,\n    particleCount: particleCount,\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n_c4 = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"AnimatedAppearance\");\n$RefreshReg$(_c4, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useRef","useEffect","styled","jsxDEV","_jsxDEV","CardContainer","div","_templateObject","_taggedTemplateLiteral","_c","Card","_templateObject2","_c2","AnimatedAppearance","_ref","_s","children","duration","particleCount","canvasRef","cardRef","canvas","current","ctx","getContext","card","rect","getBoundingClientRect","width","height","particles","Array","fill","map","x","Math","random","y","size","speedX","speedY","animationFrame","startTime","performance","now","animate","currentTime","progress","clearRect","forEach","particle","targetX","targetY","fillStyle","concat","beginPath","arc","PI","requestAnimationFrame","cancelAnimationFrame","ref","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c3","MagicalQuestionCard","_ref2","question","animationDuration","_c4","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 200px;\n`;\n\nconst Card = styled.div`\n  background-color: white;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n\nconst AnimatedAppearance = ({ children, duration = 2000, particleCount = 1000 }) => {\n  const canvasRef = useRef(null);\n  const cardRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const card = cardRef.current;\n    const rect = card.getBoundingClientRect();\n\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    const particles = Array(particleCount).fill().map(() => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      size: Math.random() * 3 + 1,\n      speedX: (Math.random() - 0.5) * 3,\n      speedY: (Math.random() - 0.5) * 3,\n    }));\n\n    let animationFrame;\n    const startTime = performance.now();\n\n    const animate = (currentTime) => {\n      const progress = (currentTime - startTime) / duration;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      particles.forEach((particle) => {\n        const targetX = canvas.width / 2;\n        const targetY = canvas.height / 2;\n\n        particle.x += (targetX - particle.x) * 0.05 + particle.speedX * (1 - progress);\n        particle.y += (targetY - particle.y) * 0.05 + particle.speedY * (1 - progress);\n\n        ctx.fillStyle = `rgba(240, 240, 240, ${1 - progress})`;\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size * (1 - progress), 0, Math.PI * 2);\n        ctx.fill();\n      });\n\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => cancelAnimationFrame(animationFrame);\n  }, [duration, particleCount]);\n\n  return (\n    <CardContainer>\n      <canvas ref={canvasRef} style={{ position: 'absolute', top: 0, left: 0 }} />\n      <Card ref={cardRef}>{children}</Card>\n    </CardContainer>\n  );\n};\n\nconst MagicalQuestionCard = ({ question, animationDuration, particleCount }) => (\n  <AnimatedAppearance duration={animationDuration} particleCount={particleCount}>\n    <h3>{question}</h3>\n  </AnimatedAppearance>\n);\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}