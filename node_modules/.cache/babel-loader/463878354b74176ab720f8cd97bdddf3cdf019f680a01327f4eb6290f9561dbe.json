{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _templateObject,\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 300px;\\n  height: 200px;\\n\"])));\n_c = CardContainer;\nconst AnimatedAppearance = _ref => {\n  _s();\n  let {\n    children,\n    duration = 2000,\n    particleCount = 5000\n  } = _ref;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 300;\n    canvas.height = 200;\n    const particles = Array(particleCount).fill().map(() => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      size: Math.random() * 2 + 1,\n      speedX: (Math.random() - 0.5) * 2,\n      speedY: (Math.random() - 0.5) * 2\n    }));\n    let animationFrame;\n    const startTime = performance.now();\n    const animate = currentTime => {\n      const progress = Math.min((currentTime - startTime) / duration, 1);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw card shape\n      ctx.fillStyle = \"rgba(255, 255, 255, \".concat(progress, \")\");\n      ctx.roundRect(10, 10, canvas.width - 20, canvas.height - 20, 10);\n      ctx.fill();\n\n      // Draw particles\n      particles.forEach(particle => {\n        const targetX = 10 + particle.x / canvas.width * (canvas.width - 20);\n        const targetY = 10 + particle.y / canvas.height * (canvas.height - 20);\n        particle.x += (targetX - particle.x) * 0.05 * progress;\n        particle.y += (targetY - particle.y) * 0.05 * progress;\n        ctx.fillStyle = \"rgba(240, 240, 240, \".concat(1 - progress, \")\");\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size * (1 - progress * 0.5), 0, Math.PI * 2);\n        ctx.fill();\n      });\n\n      // Draw text\n      ctx.fillStyle = \"rgba(0, 0, 0, \".concat(progress, \")\");\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(children, canvas.width / 2, canvas.height / 2);\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n    animationFrame = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationFrame);\n  }, [duration, particleCount, children]);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedAppearance, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = AnimatedAppearance;\nconst QuestionCard = _ref2 => {\n  let {\n    question,\n    animationDuration,\n    particleCount\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(AnimatedAppearance, {\n    duration: animationDuration,\n    particleCount: particleCount,\n    children: question\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n};\n_c3 = QuestionCard;\nexport default QuestionCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"AnimatedAppearance\");\n$RefreshReg$(_c3, \"QuestionCard\");","map":{"version":3,"names":["React","useRef","useEffect","styled","jsxDEV","_jsxDEV","CardContainer","div","_templateObject","_taggedTemplateLiteral","_c","AnimatedAppearance","_ref","_s","children","duration","particleCount","canvasRef","canvas","current","ctx","getContext","width","height","particles","Array","fill","map","x","Math","random","y","size","speedX","speedY","animationFrame","startTime","performance","now","animate","currentTime","progress","min","clearRect","fillStyle","concat","roundRect","forEach","particle","targetX","targetY","beginPath","arc","PI","font","textAlign","textBaseline","fillText","requestAnimationFrame","cancelAnimationFrame","ref","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c2","QuestionCard","_ref2","question","animationDuration","_c3","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 200px;\n`;\n\nconst AnimatedAppearance = ({ children, duration = 2000, particleCount = 5000 }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = 300;\n    canvas.height = 200;\n\n    const particles = Array(particleCount).fill().map(() => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      size: Math.random() * 2 + 1,\n      speedX: (Math.random() - 0.5) * 2,\n      speedY: (Math.random() - 0.5) * 2,\n    }));\n\n    let animationFrame;\n    const startTime = performance.now();\n\n    const animate = (currentTime) => {\n      const progress = Math.min((currentTime - startTime) / duration, 1);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw card shape\n      ctx.fillStyle = `rgba(255, 255, 255, ${progress})`;\n      ctx.roundRect(10, 10, canvas.width - 20, canvas.height - 20, 10);\n      ctx.fill();\n\n      // Draw particles\n      particles.forEach((particle) => {\n        const targetX = 10 + (particle.x / canvas.width) * (canvas.width - 20);\n        const targetY = 10 + (particle.y / canvas.height) * (canvas.height - 20);\n\n        particle.x += (targetX - particle.x) * 0.05 * progress;\n        particle.y += (targetY - particle.y) * 0.05 * progress;\n\n        ctx.fillStyle = `rgba(240, 240, 240, ${1 - progress})`;\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size * (1 - progress * 0.5), 0, Math.PI * 2);\n        ctx.fill();\n      });\n\n      // Draw text\n      ctx.fillStyle = `rgba(0, 0, 0, ${progress})`;\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(children, canvas.width / 2, canvas.height / 2);\n\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => cancelAnimationFrame(animationFrame);\n  }, [duration, particleCount, children]);\n\n  return (\n    <CardContainer>\n      <canvas ref={canvasRef} style={{ position: 'absolute', top: 0, left: 0 }} />\n    </CardContainer>\n  );\n};\n\nconst QuestionCard = ({ question, animationDuration, particleCount }) => (\n  <AnimatedAppearance duration={animationDuration} particleCount={particleCount}>\n    {question}\n  </AnimatedAppearance>\n);\n\nexport default QuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}