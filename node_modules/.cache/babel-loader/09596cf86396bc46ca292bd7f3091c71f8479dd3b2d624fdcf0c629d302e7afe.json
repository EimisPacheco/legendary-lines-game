{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question = \"Default Question\",\n    triggerEffect\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const [isVisible, setIsVisible] = useState(true);\n  const [key, setKey] = useState(0);\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardElement = document.querySelector('.card-content');\n    if (!cardElement) return particlesArray;\n    const cardRect = cardElement.getBoundingClientRect();\n    const cardWidth = cardRect.width;\n    const cardHeight = cardRect.height;\n    const columns = 60;\n    const rows = 30;\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = i / columns * cardWidth;\n        const baseY = j / rows * cardHeight;\n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          const randomOffsetX = Math.random() * (cardWidth / columns) * 0.8;\n          const randomOffsetY = Math.random() * (cardHeight / rows) * 0.8;\n          particlesArray.push({\n            id: \"particle-\".concat(i, \"-\").concat(j, \"-\").concat(k, \"-\").concat(key),\n            initialX: baseX + randomOffsetX,\n            initialY: baseY + randomOffsetY,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: j / rows * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, [key]);\n\n  // Initial load\n  useEffect(() => {\n    const initTimer = setTimeout(() => {\n      setParticles(generateParticles());\n\n      // Set initial integration timeout\n      const integrationTimer = setTimeout(() => {\n        setIsIntegrating(false);\n      }, 2500);\n      return () => clearTimeout(integrationTimer);\n    }, 100);\n    return () => clearTimeout(initTimer);\n  }, [generateParticles]);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsIntegrating(false);\n      setIsVisible(true);\n\n      // Clear particles after disintegration animation\n      const clearTimer = setTimeout(() => {\n        setIsVisible(false);\n        setParticles([]);\n      }, 2000);\n\n      // Generate new particles and start integration\n      const regenerateTimer = setTimeout(() => {\n        setKey(prev => prev + 1);\n        setIsIntegrating(true);\n        setIsVisible(true);\n        setParticles(generateParticles());\n      }, 2200);\n      return () => {\n        clearTimeout(clearTimer);\n        clearTimeout(regenerateTimer);\n      };\n    }\n  }, [triggerEffect, generateParticles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"card-content\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(motion.h2, {\n          className: \"question-text\",\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            delay: 1.2\n          },\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, \"content-\".concat(key), false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"particles-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          children: isVisible && particles.map(particle => /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"thanos-particle\",\n            initial: {\n              x: isIntegrating ? particle.finalX : particle.initialX,\n              y: isIntegrating ? particle.finalY : particle.initialY,\n              opacity: 0,\n              scale: 0,\n              rotate: particle.rotation\n            },\n            animate: {\n              x: isIntegrating ? particle.initialX : particle.finalX,\n              y: isIntegrating ? particle.initialY : particle.finalY,\n              opacity: isIntegrating ? particle.opacity : 0,\n              scale: isIntegrating ? 1 : 0,\n              rotate: isIntegrating ? 0 : particle.rotation\n            },\n            exit: {\n              opacity: 0,\n              scale: 0,\n              transition: {\n                duration: 0.5\n              }\n            },\n            transition: {\n              duration: 1.8,\n              delay: particle.delay,\n              ease: [0.23, 1, 0.32, 1]\n            },\n            style: {\n              width: \"\".concat(particle.size, \"px\"),\n              height: \"\".concat(particle.size, \"px\"),\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              transform: \"translate(\".concat(particle.initialX, \"px, \").concat(particle.initialY, \"px)\")\n            }\n          }, particle.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"TMDl/WZSWcXbQMMWkmvjo0FOwtM=\");\n_c = MagicalQuestionCard;\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","PropTypes","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","question","triggerEffect","particles","setParticles","isIntegrating","setIsIntegrating","isVisible","setIsVisible","key","setKey","generateParticles","particlesArray","cardElement","document","querySelector","cardRect","getBoundingClientRect","cardWidth","width","cardHeight","height","columns","rows","i","j","baseX","baseY","particlesPerCell","k","randomOffsetX","Math","random","randomOffsetY","push","id","concat","initialX","initialY","finalX","finalY","size","delay","opacity","rotation","initTimer","setTimeout","integrationTimer","clearTimeout","clearTimer","regenerateTimer","prev","className","children","div","initial","animate","exit","transition","duration","h2","fileName","_jsxFileName","lineNumber","columnNumber","mode","map","particle","x","y","scale","rotate","ease","style","position","left","top","transform","_c","propTypes","string","number","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst MagicalQuestionCard = ({ question = \"Default Question\", triggerEffect }) => {\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const [isVisible, setIsVisible] = useState(true);\n  const [key, setKey] = useState(0);\n\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardElement = document.querySelector('.card-content');\n    if (!cardElement) return particlesArray;\n    \n    const cardRect = cardElement.getBoundingClientRect();\n    const cardWidth = cardRect.width;\n    const cardHeight = cardRect.height;\n    \n    const columns = 60;\n    const rows = 30;\n    \n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = (i / columns) * cardWidth;\n        const baseY = (j / rows) * cardHeight;\n        \n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          const randomOffsetX = Math.random() * (cardWidth / columns) * 0.8;\n          const randomOffsetY = Math.random() * (cardHeight / rows) * 0.8;\n\n          particlesArray.push({\n            id: `particle-${i}-${j}-${k}-${key}`,\n            initialX: baseX + randomOffsetX,\n            initialY: baseY + randomOffsetY,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: (j / rows) * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, [key]);\n\n  // Initial load\n  useEffect(() => {\n    const initTimer = setTimeout(() => {\n      setParticles(generateParticles());\n      \n      // Set initial integration timeout\n      const integrationTimer = setTimeout(() => {\n        setIsIntegrating(false);\n      }, 2500);\n\n      return () => clearTimeout(integrationTimer);\n    }, 100);\n\n    return () => clearTimeout(initTimer);\n  }, [generateParticles]);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsIntegrating(false);\n      setIsVisible(true);\n\n      // Clear particles after disintegration animation\n      const clearTimer = setTimeout(() => {\n        setIsVisible(false);\n        setParticles([]);\n      }, 2000);\n\n      // Generate new particles and start integration\n      const regenerateTimer = setTimeout(() => {\n        setKey(prev => prev + 1);\n        setIsIntegrating(true);\n        setIsVisible(true);\n        setParticles(generateParticles());\n      }, 2200);\n\n      return () => {\n        clearTimeout(clearTimer);\n        clearTimeout(regenerateTimer);\n      };\n    }\n  }, [triggerEffect, generateParticles]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-wrapper\">\n        <motion.div \n          key={`content-${key}`}\n          className=\"card-content\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <motion.h2 \n            className=\"question-text\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1.2 }}\n          >\n            {question}\n          </motion.h2>\n        </motion.div>\n\n        <div className=\"particles-wrapper\">\n          <AnimatePresence mode=\"wait\">\n            {isVisible && particles.map((particle) => (\n              <motion.div\n                key={particle.id}\n                className=\"thanos-particle\"\n                initial={{\n                  x: isIntegrating ? particle.finalX : particle.initialX,\n                  y: isIntegrating ? particle.finalY : particle.initialY,\n                  opacity: 0,\n                  scale: 0,\n                  rotate: particle.rotation\n                }}\n                animate={{\n                  x: isIntegrating ? particle.initialX : particle.finalX,\n                  y: isIntegrating ? particle.initialY : particle.finalY,\n                  opacity: isIntegrating ? particle.opacity : 0,\n                  scale: isIntegrating ? 1 : 0,\n                  rotate: isIntegrating ? 0 : particle.rotation\n                }}\n                exit={{\n                  opacity: 0,\n                  scale: 0,\n                  transition: { duration: 0.5 }\n                }}\n                transition={{\n                  duration: 1.8,\n                  delay: particle.delay,\n                  ease: [0.23, 1, 0.32, 1]\n                }}\n                style={{\n                  width: `${particle.size}px`,\n                  height: `${particle.size}px`,\n                  position: 'absolute',\n                  left: 0,\n                  top: 0,\n                  transform: `translate(${particle.initialX}px, ${particle.initialY}px)`\n                }}\n              />\n            ))}\n          </AnimatePresence>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}