{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question = \"Default Question\",\n    triggerEffect\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const [key, setKey] = useState(0);\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardWidth = 600;\n    const cardHeight = 300;\n    const columns = 60;\n    const rows = 30;\n    const cellWidth = cardWidth / columns;\n    const cellHeight = cardHeight / rows;\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = i / columns * cardWidth;\n        const baseY = j / rows * cardHeight;\n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          const randomOffsetX = Math.random() * cellWidth * 0.8;\n          const randomOffsetY = Math.random() * cellHeight * 0.8;\n          particlesArray.push({\n            id: \"particle-\".concat(i, \"-\").concat(j, \"-\").concat(k, \"-\").concat(key),\n            initialX: baseX + randomOffsetX,\n            initialY: baseY + randomOffsetY,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: j / rows * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, [key]);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsIntegrating(false);\n      setShouldAnimate(true);\n\n      // Wait for disintegration, then start new integration\n      const timer = setTimeout(() => {\n        setKey(prev => prev + 1);\n        setIsIntegrating(true);\n        setParticles(generateParticles());\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [triggerEffect, generateParticles]);\n\n  // Initial load and integration timing\n  useEffect(() => {\n    if (shouldAnimate) {\n      setParticles(generateParticles());\n      const integrationTimer = setTimeout(() => {\n        setIsIntegrating(false);\n        setShouldAnimate(false);\n      }, 2500);\n      return () => clearTimeout(integrationTimer);\n    }\n  }, [shouldAnimate, generateParticles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"card-content\",\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          },\n          transition: {\n            duration: 0.5\n          },\n          children: /*#__PURE__*/_jsxDEV(motion.h2, {\n            className: \"question-text\",\n            initial: {\n              opacity: 0\n            },\n            animate: {\n              opacity: 1\n            },\n            transition: {\n              delay: 1.2\n            },\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, \"content-\".concat(key), false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"particles-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          children: particles.map(particle => /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"thanos-particle\",\n            initial: {\n              x: isIntegrating ? particle.finalX : particle.initialX,\n              y: isIntegrating ? particle.finalY : particle.initialY,\n              opacity: 0,\n              scale: 0,\n              rotate: particle.rotation\n            },\n            animate: {\n              x: isIntegrating ? particle.initialX : particle.finalX,\n              y: isIntegrating ? particle.initialY : particle.finalY,\n              opacity: isIntegrating ? particle.opacity : 0,\n              scale: isIntegrating ? 1 : 0,\n              rotate: isIntegrating ? 0 : particle.rotation\n            },\n            exit: {\n              x: particle.finalX,\n              y: particle.finalY,\n              opacity: 0,\n              scale: 0,\n              rotate: particle.rotation\n            },\n            transition: {\n              duration: 1.8,\n              delay: particle.delay,\n              ease: [0.23, 1, 0.32, 1]\n            },\n            style: {\n              width: \"\".concat(particle.size, \"px\"),\n              height: \"\".concat(particle.size, \"px\"),\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              transform: \"translate(\".concat(particle.initialX, \"px, \").concat(particle.initialY, \"px)\")\n            }\n          }, particle.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"2fT681gPpnxJA+7d9l+g1yGwiB8=\");\n_c = MagicalQuestionCard;\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","PropTypes","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","question","triggerEffect","particles","setParticles","isIntegrating","setIsIntegrating","key","setKey","shouldAnimate","setShouldAnimate","generateParticles","particlesArray","cardWidth","cardHeight","columns","rows","cellWidth","cellHeight","i","j","baseX","baseY","particlesPerCell","k","randomOffsetX","Math","random","randomOffsetY","push","id","concat","initialX","initialY","finalX","finalY","size","delay","opacity","rotation","timer","setTimeout","prev","clearTimeout","integrationTimer","className","children","mode","div","initial","animate","exit","transition","duration","h2","fileName","_jsxFileName","lineNumber","columnNumber","map","particle","x","y","scale","rotate","ease","style","width","height","position","left","top","transform","_c","propTypes","string","number","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PropTypes from 'prop-types';\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst MagicalQuestionCard = ({ question = \"Default Question\", triggerEffect }) => {\n  const [particles, setParticles] = useState([]);\n  const [isIntegrating, setIsIntegrating] = useState(true);\n  const [key, setKey] = useState(0);\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n\n  const generateParticles = useCallback(() => {\n    const particlesArray = [];\n    const cardWidth = 600;\n    const cardHeight = 300;\n    \n    const columns = 60;\n    const rows = 30;\n    const cellWidth = cardWidth / columns;\n    const cellHeight = cardHeight / rows;\n\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < rows; j++) {\n        const baseX = (i / columns) * cardWidth;\n        const baseY = (j / rows) * cardHeight;\n        \n        const particlesPerCell = 2;\n        for (let k = 0; k < particlesPerCell; k++) {\n          const randomOffsetX = Math.random() * cellWidth * 0.8;\n          const randomOffsetY = Math.random() * cellHeight * 0.8;\n\n          particlesArray.push({\n            id: `particle-${i}-${j}-${k}-${key}`,\n            initialX: baseX + randomOffsetX,\n            initialY: baseY + randomOffsetY,\n            finalX: baseX + (Math.random() - 0.5) * cardWidth * 1.5,\n            finalY: baseY - Math.random() * cardHeight * 2,\n            size: Math.random() * 2 + 1,\n            delay: (j / rows) * 0.8 + Math.random() * 0.3,\n            opacity: Math.random() * 0.5 + 0.5,\n            rotation: Math.random() * 360\n          });\n        }\n      }\n    }\n    return particlesArray;\n  }, [key]);\n\n  // Handle question changes\n  useEffect(() => {\n    if (triggerEffect > 0) {\n      // Start disintegration\n      setIsIntegrating(false);\n      setShouldAnimate(true);\n\n      // Wait for disintegration, then start new integration\n      const timer = setTimeout(() => {\n        setKey(prev => prev + 1);\n        setIsIntegrating(true);\n        setParticles(generateParticles());\n      }, 2000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [triggerEffect, generateParticles]);\n\n  // Initial load and integration timing\n  useEffect(() => {\n    if (shouldAnimate) {\n      setParticles(generateParticles());\n      \n      const integrationTimer = setTimeout(() => {\n        setIsIntegrating(false);\n        setShouldAnimate(false);\n      }, 2500);\n\n      return () => clearTimeout(integrationTimer);\n    }\n  }, [shouldAnimate, generateParticles]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-wrapper\">\n        <AnimatePresence mode=\"wait\">\n          <motion.div \n            key={`content-${key}`}\n            className=\"card-content\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <motion.h2 \n              className=\"question-text\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1.2 }}\n            >\n              {question}\n            </motion.h2>\n          </motion.div>\n        </AnimatePresence>\n\n        <div className=\"particles-wrapper\">\n          <AnimatePresence mode=\"wait\">\n            {particles.map((particle) => (\n              <motion.div\n                key={particle.id}\n                className=\"thanos-particle\"\n                initial={{\n                  x: isIntegrating ? particle.finalX : particle.initialX,\n                  y: isIntegrating ? particle.finalY : particle.initialY,\n                  opacity: 0,\n                  scale: 0,\n                  rotate: particle.rotation\n                }}\n                animate={{\n                  x: isIntegrating ? particle.initialX : particle.finalX,\n                  y: isIntegrating ? particle.initialY : particle.finalY,\n                  opacity: isIntegrating ? particle.opacity : 0,\n                  scale: isIntegrating ? 1 : 0,\n                  rotate: isIntegrating ? 0 : particle.rotation\n                }}\n                exit={{\n                  x: particle.finalX,\n                  y: particle.finalY,\n                  opacity: 0,\n                  scale: 0,\n                  rotate: particle.rotation\n                }}\n                transition={{\n                  duration: 1.8,\n                  delay: particle.delay,\n                  ease: [0.23, 1, 0.32, 1]\n                }}\n                style={{\n                  width: `${particle.size}px`,\n                  height: `${particle.size}px`,\n                  position: 'absolute',\n                  left: 0,\n                  top: 0,\n                  transform: `translate(${particle.initialX}px, ${particle.initialY}px)`\n                }}\n              />\n            ))}\n          </AnimatePresence>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMagicalQuestionCard.propTypes = {\n  question: PropTypes.string,\n  triggerEffect: PropTypes.number\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}