{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MagicalQuestionCard from './MagicalQuestionCard';\nimport InputModal from './InputModal';\nimport { getPhrase } from '../services/aiService';\nimport '../styles/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = _ref => {\n  _s();\n  let {\n    difficulty,\n    numberOfRounds\n  } = _ref;\n  // State declarations\n  const [currentPhrase, setCurrentPhrase] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [round, setRound] = useState(1);\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  const [showAnswerModal, setShowAnswerModal] = useState(false);\n  const [currentQuestionType, setCurrentQuestionType] = useState('source');\n  const [phraseData, setPhraseData] = useState(null);\n\n  // Functions\n  const fetchNewPhrase = async () => {\n    if (!selectedCategory) return;\n    try {\n      const data = await getPhrase(selectedCategory, difficulty);\n      setPhraseData(data);\n      setCurrentPhrase(data.phrase);\n    } catch (error) {\n      console.error('Error fetching phrase:', error);\n    }\n  };\n  const handleCategorySelect = async category => {\n    setSelectedCategory(category);\n    setTriggerEffect(prev => prev + 1);\n    try {\n      const data = await getPhrase(category, difficulty);\n      setPhraseData(data);\n      setCurrentPhrase(data.phrase);\n      setCurrentQuestionType('source');\n      setShowAnswerModal(true);\n    } catch (error) {\n      console.error('Error fetching phrase:', error);\n    }\n  };\n\n  // JSX Return\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Round: \", round, \"/\", numberOfRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Streak: \", streak]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MagicalQuestionCard, {\n      message: currentPhrase,\n      triggerEffect: triggerEffect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputModal, {\n      isOpen: showAnswerModal,\n      onSubmit: answer => {\n        // Handle answer submission\n        setShowAnswerModal(false);\n      },\n      prompt: \"Enter your answer...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"H4LmhjYCcbRGICbLct/XkKRhMtQ=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","MagicalQuestionCard","InputModal","getPhrase","jsxDEV","_jsxDEV","Game","_ref","_s","difficulty","numberOfRounds","currentPhrase","setCurrentPhrase","selectedCategory","setSelectedCategory","score","setScore","streak","setStreak","round","setRound","triggerEffect","setTriggerEffect","showResult","setShowResult","showAnswerModal","setShowAnswerModal","currentQuestionType","setCurrentQuestionType","phraseData","setPhraseData","fetchNewPhrase","data","phrase","error","console","handleCategorySelect","category","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","isOpen","onSubmit","answer","prompt","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/Game.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport MagicalQuestionCard from './MagicalQuestionCard';\nimport InputModal from './InputModal';\nimport { getPhrase } from '../services/aiService';\nimport '../styles/Game.css';\n\nconst Game = ({ difficulty, numberOfRounds }) => {\n  // State declarations\n  const [currentPhrase, setCurrentPhrase] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [round, setRound] = useState(1);\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  const [showAnswerModal, setShowAnswerModal] = useState(false);\n  const [currentQuestionType, setCurrentQuestionType] = useState('source');\n  const [phraseData, setPhraseData] = useState(null);\n\n  // Functions\n  const fetchNewPhrase = async () => {\n    if (!selectedCategory) return;\n    try {\n      const data = await getPhrase(selectedCategory, difficulty);\n      setPhraseData(data);\n      setCurrentPhrase(data.phrase);\n    } catch (error) {\n      console.error('Error fetching phrase:', error);\n    }\n  };\n\n  const handleCategorySelect = async (category) => {\n    setSelectedCategory(category);\n    setTriggerEffect(prev => prev + 1);\n    try {\n      const data = await getPhrase(category, difficulty);\n      setPhraseData(data);\n      setCurrentPhrase(data.phrase);\n      setCurrentQuestionType('source');\n      setShowAnswerModal(true);\n    } catch (error) {\n      console.error('Error fetching phrase:', error);\n    }\n  };\n\n  // JSX Return\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <div>Round: {round}/{numberOfRounds}</div>\n        <div>Score: {score}</div>\n        <div>Streak: {streak}</div>\n      </div>\n\n      <MagicalQuestionCard \n        message={currentPhrase}\n        triggerEffect={triggerEffect}\n      />\n\n      <InputModal \n        isOpen={showAnswerModal}\n        onSubmit={(answer) => {\n          // Handle answer submission\n          setShowAnswerModal(false);\n        }}\n        prompt=\"Enter your answer...\"\n      />\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}