{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 100; i++) {\n    const size = Math.random() * 8 + 3; // Particles are between 3px to 11px\n    const randomX = Math.random() * 100; // X position (from 0% to 100%)\n    const randomY = Math.random() * 100; // Y position (from 0% to 100%)\n    const delay = Math.random() * 2; // Each particle has a different delay for randomness\n\n    particles.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-particle\",\n      style: {\n        left: \"\".concat(randomX, \"%\"),\n        top: \"\".concat(randomY, \"%\"),\n        width: \"\".concat(size, \"px\"),\n        height: \"\".concat(size, \"px\"),\n        animationDelay: \"\".concat(delay, \"s\")\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this));\n  }\n  return particles;\n};\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question,\n    cardKey\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  useEffect(() => {\n    setParticles(generateDustParticles());\n  }, [cardKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-container\",\n      children: particles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-content\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"n2oV9J0JxRF0n1eg4nXLNJcP/RY=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateDustParticles","particles","i","size","Math","random","randomX","randomY","delay","push","className","style","left","concat","top","width","height","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","MagicalQuestionCard","_ref","_s","question","cardKey","setParticles","children","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 100; i++) {\n    const size = Math.random() * 8 + 3; // Particles are between 3px to 11px\n    const randomX = Math.random() * 100; // X position (from 0% to 100%)\n    const randomY = Math.random() * 100; // Y position (from 0% to 100%)\n    const delay = Math.random() * 2; // Each particle has a different delay for randomness\n\n    particles.push(\n      <div\n        key={i}\n        className=\"dust-particle\"\n        style={{\n          left: `${randomX}%`,\n          top: `${randomY}%`,\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDelay: `${delay}s`,\n        }}\n      />\n    );\n  }\n  return particles;\n};\n\nconst MagicalQuestionCard = ({ question, cardKey }) => {\n  const [particles, setParticles] = useState([]);\n\n  useEffect(() => {\n    setParticles(generateDustParticles());\n  }, [cardKey]);\n\n  return (\n    <div className=\"question-card-container\">\n      <div className=\"dust-container\">{particles}</div>\n      <div className=\"question-card\">\n        <div className=\"question-content\">{question}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default MagicalQuestionCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC5B,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,MAAMC,OAAO,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACrC,MAAME,OAAO,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACrC,MAAMG,KAAK,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEjCJ,SAAS,CAACQ,IAAI,cACZV,OAAA;MAEEW,SAAS,EAAC,eAAe;MACzBC,KAAK,EAAE;QACLC,IAAI,KAAAC,MAAA,CAAKP,OAAO,MAAG;QACnBQ,GAAG,KAAAD,MAAA,CAAKN,OAAO,MAAG;QAClBQ,KAAK,KAAAF,MAAA,CAAKV,IAAI,OAAI;QAClBa,MAAM,KAAAH,MAAA,CAAKV,IAAI,OAAI;QACnBc,cAAc,KAAAJ,MAAA,CAAKL,KAAK;MAC1B;IAAE,GARGN,CAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASP,CACH,CAAC;EACH;EACA,OAAOpB,SAAS;AAClB,CAAC;AAED,MAAMqB,mBAAmB,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAChD,MAAM,CAACtB,SAAS,EAAE0B,YAAY,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd8B,YAAY,CAAC3B,qBAAqB,CAAC,CAAC,CAAC;EACvC,CAAC,EAAE,CAAC0B,OAAO,CAAC,CAAC;EAEb,oBACE3B,OAAA;IAAKW,SAAS,EAAC,yBAAyB;IAAAkB,QAAA,gBACtC7B,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAkB,QAAA,EAAE3B;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjDtB,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAkB,QAAA,eAC5B7B,OAAA;QAAKW,SAAS,EAAC,kBAAkB;QAAAkB,QAAA,EAAEH;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,CAfIF,mBAAmB;AAAAO,EAAA,GAAnBP,mBAAmB;AAiBzB,eAAeA,mBAAmB;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}