{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 100; i++) {\n    const size = Math.random() * 8 + 3; // Particles are between 3px to 11px\n    const randomX = Math.random() * 100; // X position (from 0% to 100%)\n    const randomY = Math.random() * 100; // Y position (from 0% to 100%)\n    const delay = Math.random() * 2; // Each particle has a different delay for randomness\n\n    particles.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-particle\",\n      style: {\n        left: \"\".concat(randomX, \"%\"),\n        top: \"\".concat(randomY, \"%\"),\n        width: \"\".concat(size, \"px\"),\n        height: \"\".concat(size, \"px\"),\n        animationDelay: \"\".concat(delay, \"s\")\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  }\n  return particles;\n};\nconst QuestionMagicalQuestionCardCard = _ref => {\n  _s();\n  let {\n    question\n  } = _ref;\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    if (question) {\n      setShow(true);\n      setTimeout(() => setShow(false), 5000); // Hide after 5 seconds if needed\n    }\n  }, [question]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container \".concat(show ? \"show\" : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-field\",\n      children: show && generateDustParticles()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionMagicalQuestionCardCard, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n_c = QuestionMagicalQuestionCardCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionMagicalQuestionCardCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateDustParticles","particles","i","size","Math","random","randomX","randomY","delay","push","className","style","left","concat","top","width","height","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","QuestionMagicalQuestionCardCard","_ref","_s","question","show","setShow","setTimeout","children","_c","MagicalQuestionCard","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\n\n\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 100; i++) {\n    const size = Math.random() * 8 + 3; // Particles are between 3px to 11px\n    const randomX = Math.random() * 100; // X position (from 0% to 100%)\n    const randomY = Math.random() * 100; // Y position (from 0% to 100%)\n    const delay = Math.random() * 2; // Each particle has a different delay for randomness\n\n    particles.push(\n      <div\n        key={i}\n        className=\"dust-particle\"\n        style={{\n          left: `${randomX}%`,\n          top: `${randomY}%`,\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDelay: `${delay}s`,\n        }}\n      ></div>\n    );\n  }\n  return particles;\n};\n\nconst QuestionMagicalQuestionCardCard = ({ question }) => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (question) {\n      setShow(true);\n      setTimeout(() => setShow(false), 5000); // Hide after 5 seconds if needed\n    }\n  }, [question]);\n\n  return (\n    <div className={`card-container ${show ? \"show\" : \"\"}`}>\n      <div className=\"dust-field\">{show && generateDustParticles()}</div>\n      <div className=\"card-content\">\n        <h2 className=\"question-text\">{question}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default MagicalQuestionCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC5B,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,MAAMC,OAAO,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACrC,MAAME,OAAO,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACrC,MAAMG,KAAK,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEjCJ,SAAS,CAACQ,IAAI,cACZV,OAAA;MAEEW,SAAS,EAAC,eAAe;MACzBC,KAAK,EAAE;QACLC,IAAI,KAAAC,MAAA,CAAKP,OAAO,MAAG;QACnBQ,GAAG,KAAAD,MAAA,CAAKN,OAAO,MAAG;QAClBQ,KAAK,KAAAF,MAAA,CAAKV,IAAI,OAAI;QAClBa,MAAM,KAAAH,MAAA,CAAKV,IAAI,OAAI;QACnBc,cAAc,KAAAJ,MAAA,CAAKL,KAAK;MAC1B;IAAE,GARGN,CAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASF,CACR,CAAC;EACH;EACA,OAAOpB,SAAS;AAClB,CAAC;AAED,MAAMqB,+BAA+B,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACnD,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,IAAI4B,QAAQ,EAAE;MACZE,OAAO,CAAC,IAAI,CAAC;MACbC,UAAU,CAAC,MAAMD,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACE1B,OAAA;IAAKW,SAAS,oBAAAG,MAAA,CAAoBa,IAAI,GAAG,MAAM,GAAG,EAAE,CAAG;IAAAG,QAAA,gBACrD9B,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAmB,QAAA,EAAEH,IAAI,IAAI1B,qBAAqB,CAAC;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnEtB,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAmB,QAAA,eAC3B9B,OAAA;QAAIW,SAAS,EAAC,eAAe;QAAAmB,QAAA,EAAEJ;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,CAlBIF,+BAA+B;AAAAQ,EAAA,GAA/BR,+BAA+B;AAoBrC,eAAeS,mBAAmB;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}