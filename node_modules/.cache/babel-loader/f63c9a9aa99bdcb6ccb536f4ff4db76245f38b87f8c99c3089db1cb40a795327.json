{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 50; i++) {\n    const size = Math.random() * 5 + 2;\n    const left = Math.random() * 100;\n    const top = Math.random() * 100;\n    particles.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-particle\",\n      style: {\n        width: \"\".concat(size, \"px\"),\n        height: \"\".concat(size, \"px\"),\n        left: \"\".concat(left, \"%\"),\n        top: \"\".concat(top, \"%\"),\n        animationDelay: \"\".concat(Math.random() * 0.5, \"s\")\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this));\n  }\n  return particles;\n};\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    question,\n    triggerEffect\n  } = _ref;\n  const [dustParticles, setDustParticles] = useState([]);\n  useEffect(() => {\n    setDustParticles(generateDustParticles());\n  }, [question, triggerEffect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-field\",\n      children: dustParticles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"tBEtWKmCoG8Uo7BTxDzdk0FRL9w=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateDustParticles","particles","i","size","Math","random","left","top","push","className","style","width","concat","height","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","MagicalQuestionCard","_ref","_s","question","triggerEffect","dustParticles","setDustParticles","children","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/MagicalQuestionCard.css\";\n\nconst generateDustParticles = () => {\n  const particles = [];\n  for (let i = 0; i < 50; i++) {\n    const size = Math.random() * 5 + 2;\n    const left = Math.random() * 100;\n    const top = Math.random() * 100;\n    particles.push(\n      <div\n        key={i}\n        className=\"dust-particle\"\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          left: `${left}%`,\n          top: `${top}%`,\n          animationDelay: `${Math.random() * 0.5}s`,\n        }}\n      />\n    );\n  }\n  return particles;\n};\n\nconst MagicalQuestionCard = ({ question, triggerEffect }) => {\n  const [dustParticles, setDustParticles] = useState([]);\n\n  useEffect(() => {\n    setDustParticles(generateDustParticles());\n  }, [question, triggerEffect]);\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-content\">\n        <h2 className=\"question-text\">{question}</h2>\n      </div>\n      <div className=\"dust-field\">{dustParticles}</div>\n    </div>\n  );\n};\n\nexport default MagicalQuestionCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IAClC,MAAMC,IAAI,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IAChC,MAAME,GAAG,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IAC/BJ,SAAS,CAACO,IAAI,cACZT,OAAA;MAEEU,SAAS,EAAC,eAAe;MACzBC,KAAK,EAAE;QACLC,KAAK,KAAAC,MAAA,CAAKT,IAAI,OAAI;QAClBU,MAAM,KAAAD,MAAA,CAAKT,IAAI,OAAI;QACnBG,IAAI,KAAAM,MAAA,CAAKN,IAAI,MAAG;QAChBC,GAAG,KAAAK,MAAA,CAAKL,GAAG,MAAG;QACdO,cAAc,KAAAF,MAAA,CAAKR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MACxC;IAAE,GARGH,CAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASP,CACH,CAAC;EACH;EACA,OAAOjB,SAAS;AAClB,CAAC;AAED,MAAMkB,mBAAmB,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GAAAH,IAAA;EACtD,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd4B,gBAAgB,CAACzB,qBAAqB,CAAC,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACsB,QAAQ,EAAEC,aAAa,CAAC,CAAC;EAE7B,oBACExB,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAiB,QAAA,gBAC7B3B,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAiB,QAAA,eAC3B3B,OAAA;QAAIU,SAAS,EAAC,eAAe;QAAAiB,QAAA,EAAEJ;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNnB,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAiB,QAAA,EAAEF;IAAa;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACG,EAAA,CAfIF,mBAAmB;AAAAQ,EAAA,GAAnBR,mBAAmB;AAiBzB,eAAeA,mBAAmB;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}