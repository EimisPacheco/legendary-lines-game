{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MagicalQuestionCard = _ref => {\n  _s();\n  let {\n    message,\n    triggerEffect\n  } = _ref;\n  const [particles, setParticles] = useState([]);\n  useEffect(() => {\n    // Create new particles when triggerEffect changes\n    const newParticles = Array.from({\n      length: 50\n    }, (_, i) => ({\n      id: \"particle-\".concat(triggerEffect, \"-\").concat(i),\n      style: {\n        left: \"\".concat(Math.random() * 100, \"%\"),\n        top: \"\".concat(Math.random() * 100, \"%\"),\n        animationDelay: \"\".concat(Math.random() * 2, \"s\"),\n        backgroundColor: \"hsl(\".concat(Math.random() * 360, \", 50%, 50%)\")\n      }\n    }));\n    setParticles(newParticles);\n  }, [triggerEffect]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n      // Send inputValue to the AI\n      sendToAI(inputValue);\n    } else {\n      console.error(\"Input value is empty\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"magical-card\",\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"particles-wrapper\",\n        children: particles.map(particle => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"particle\",\n          style: particle.style\n        }, particle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: message || \"Waiting for the game to begin...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, triggerEffect, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MagicalQuestionCard, \"n2oV9J0JxRF0n1eg4nXLNJcP/RY=\");\n_c = MagicalQuestionCard;\nexport default MagicalQuestionCard;\nvar _c;\n$RefreshReg$(_c, \"MagicalQuestionCard\");","map":{"version":3,"names":["React","useEffect","useState","motion","AnimatePresence","jsxDEV","_jsxDEV","MagicalQuestionCard","_ref","_s","message","triggerEffect","particles","setParticles","newParticles","Array","from","length","_","i","id","concat","style","left","Math","random","top","animationDelay","backgroundColor","handleSubmit","event","preventDefault","inputValue","target","elements","inputName","value","sendToAI","console","error","children","div","className","initial","opacity","scale","animate","transition","duration","map","particle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/MagicalQuestionCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/MagicalQuestionCard.css';\n\nconst MagicalQuestionCard = ({ message, triggerEffect }) => {\n  const [particles, setParticles] = useState([]);\n\n  useEffect(() => {\n    // Create new particles when triggerEffect changes\n    const newParticles = Array.from({ length: 50 }, (_, i) => ({\n      id: `particle-${triggerEffect}-${i}`,\n      style: {\n        left: `${Math.random() * 100}%`,\n        top: `${Math.random() * 100}%`,\n        animationDelay: `${Math.random() * 2}s`,\n        backgroundColor: `hsl(${Math.random() * 360}, 50%, 50%)`,\n      }\n    }));\n    setParticles(newParticles);\n  }, [triggerEffect]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.target.elements.inputName.value; // Ensure this is correct\n    // Check if inputValue is being sent correctly\n    if (inputValue) {\n        // Send inputValue to the AI\n        sendToAI(inputValue);\n    } else {\n        console.error(\"Input value is empty\");\n    }\n  }\n\n  return (\n    <AnimatePresence>\n      <motion.div \n        className=\"magical-card\"\n        key={triggerEffect}\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"particles-wrapper\">\n          {particles.map((particle) => (\n            <div\n              key={particle.id}\n              className=\"particle\"\n              style={particle.style}\n            />\n          ))}\n        </div>\n        <div className=\"card-content\">\n          {message || \"Waiting for the game to begin...\"}\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default MagicalQuestionCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}