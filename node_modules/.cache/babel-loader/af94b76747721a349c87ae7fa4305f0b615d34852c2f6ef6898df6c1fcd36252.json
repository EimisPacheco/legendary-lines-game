{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MagicalQuestionCard from './MagicalQuestionCard';\nimport AnswerModal from './AnswerModal';\nimport '../styles/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = {\n  SONG: {\n    name: 'Song',\n    points: 1\n  },\n  MOVIE: {\n    name: 'Movie',\n    points: 2\n  },\n  FAMOUS_PERSON: {\n    name: 'Famous Person',\n    points: 3\n  },\n  FICTIONAL_CHARACTER: {\n    name: 'Fictional Character',\n    points: 3\n  },\n  BOOK: {\n    name: 'Book',\n    points: 4\n  },\n  POET: {\n    name: 'Poet',\n    points: 5\n  },\n  QUOTE: {\n    name: 'Quote',\n    points: 6\n  }\n};\nconst Game = _ref => {\n  _s();\n  let {\n    difficulty,\n    numberOfRounds\n  } = _ref;\n  const [currentPhrase, setCurrentPhrase] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [round, setRound] = useState(1);\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  // New states for modal\n  const [showAnswerModal, setShowAnswerModal] = useState(false);\n  const [currentQuestionType, setCurrentQuestionType] = useState('source');\n  useEffect(() => {\n    fetchNewPhrase();\n  }, []);\n  const fetchNewPhrase = async () => {\n    // Add your API call here to get a new phrase\n    setCurrentPhrase(\"Sample phrase for testing\");\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setTriggerEffect(prev => prev + 1);\n    // Show the answer modal when category is selected\n    setCurrentQuestionType('source');\n    setShowAnswerModal(true);\n  };\n  const handleModalSubmit = answer => {\n    // Handle the answer submission\n    const isCorrect = true; // Replace with actual check\n\n    if (isCorrect) {\n      // If source is correct, ask for year\n      if (currentQuestionType === 'source') {\n        setCurrentQuestionType('year');\n        setShowAnswerModal(true);\n      } else if (currentQuestionType === 'year') {\n        // Handle year guess\n        let points = CATEGORIES[selectedCategory].points;\n        points *= 2; // Double points for correct year\n\n        if (difficulty === 'EASY') points *= 1;else if (difficulty === 'MEDIUM') points *= 1.5;else points *= 2;\n        setScore(prev => prev + points);\n        setStreak(prev => prev + 1);\n        setShowResult('correct');\n\n        // Move to next round\n        if (round < numberOfRounds) {\n          setRound(prev => prev + 1);\n          fetchNewPhrase();\n          setSelectedCategory(null);\n        } else {\n          // Game over logic\n          console.log('Game Over! Final score:', score);\n        }\n      }\n    } else {\n      setStreak(0);\n      setShowResult('wrong');\n      setShowAnswerModal(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Round: \", round, \"/\", numberOfRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Streak: \", streak]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MagicalQuestionCard, {\n      phrase: currentPhrase,\n      triggerEffect: triggerEffect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-buttons\",\n        children: Object.entries(CATEGORIES).map(_ref2 => {\n          let [key, value] = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"category-btn \".concat(selectedCategory === key ? 'selected' : ''),\n            onClick: () => handleCategorySelect(key),\n            children: [value.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"points\",\n              children: [\"(\", value.points, \" pts)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-message \".concat(showResult),\n      children: showResult === 'correct' ? 'Correct!' : 'Wrong!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnswerModal, {\n      isOpen: showAnswerModal,\n      onClose: () => setShowAnswerModal(false),\n      onSubmit: handleModalSubmit,\n      questionType: currentQuestionType,\n      currentPhrase: currentPhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"raHPCCfq2DxqeTG2ODPKE/eggLo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","MagicalQuestionCard","AnswerModal","jsxDEV","_jsxDEV","CATEGORIES","SONG","name","points","MOVIE","FAMOUS_PERSON","FICTIONAL_CHARACTER","BOOK","POET","QUOTE","Game","_ref","_s","difficulty","numberOfRounds","currentPhrase","setCurrentPhrase","selectedCategory","setSelectedCategory","yearGuess","setYearGuess","score","setScore","streak","setStreak","round","setRound","triggerEffect","setTriggerEffect","showResult","setShowResult","showAnswerModal","setShowAnswerModal","currentQuestionType","setCurrentQuestionType","fetchNewPhrase","handleCategorySelect","category","prev","handleModalSubmit","answer","isCorrect","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","phrase","Object","entries","map","_ref2","key","value","concat","onClick","isOpen","onClose","onSubmit","questionType","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MagicalQuestionCard from './MagicalQuestionCard';\nimport AnswerModal from './AnswerModal';\nimport '../styles/Game.css';\n\nconst CATEGORIES = {\n  SONG: { name: 'Song', points: 1 },\n  MOVIE: { name: 'Movie', points: 2 },\n  FAMOUS_PERSON: { name: 'Famous Person', points: 3 },\n  FICTIONAL_CHARACTER: { name: 'Fictional Character', points: 3 },\n  BOOK: { name: 'Book', points: 4 },\n  POET: { name: 'Poet', points: 5 },\n  QUOTE: { name: 'Quote', points: 6 }\n};\n\nconst Game = ({ difficulty, numberOfRounds }) => {\n  const [currentPhrase, setCurrentPhrase] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [round, setRound] = useState(1);\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  // New states for modal\n  const [showAnswerModal, setShowAnswerModal] = useState(false);\n  const [currentQuestionType, setCurrentQuestionType] = useState('source');\n\n  useEffect(() => {\n    fetchNewPhrase();\n  }, []);\n\n  const fetchNewPhrase = async () => {\n    // Add your API call here to get a new phrase\n    setCurrentPhrase(\"Sample phrase for testing\");\n  };\n\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n    setTriggerEffect(prev => prev + 1);\n    // Show the answer modal when category is selected\n    setCurrentQuestionType('source');\n    setShowAnswerModal(true);\n  };\n\n  const handleModalSubmit = (answer) => {\n    // Handle the answer submission\n    const isCorrect = true; // Replace with actual check\n    \n    if (isCorrect) {\n      // If source is correct, ask for year\n      if (currentQuestionType === 'source') {\n        setCurrentQuestionType('year');\n        setShowAnswerModal(true);\n      } else if (currentQuestionType === 'year') {\n        // Handle year guess\n        let points = CATEGORIES[selectedCategory].points;\n        points *= 2; // Double points for correct year\n        \n        if (difficulty === 'EASY') points *= 1;\n        else if (difficulty === 'MEDIUM') points *= 1.5;\n        else points *= 2;\n\n        setScore(prev => prev + points);\n        setStreak(prev => prev + 1);\n        setShowResult('correct');\n        \n        // Move to next round\n        if (round < numberOfRounds) {\n          setRound(prev => prev + 1);\n          fetchNewPhrase();\n          setSelectedCategory(null);\n        } else {\n          // Game over logic\n          console.log('Game Over! Final score:', score);\n        }\n      }\n    } else {\n      setStreak(0);\n      setShowResult('wrong');\n      setShowAnswerModal(false);\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <div>Round: {round}/{numberOfRounds}</div>\n        <div>Score: {score}</div>\n        <div>Streak: {streak}</div>\n      </div>\n\n      <MagicalQuestionCard \n        phrase={currentPhrase}\n        triggerEffect={triggerEffect}\n      />\n\n      <div className=\"category-selector\">\n        <h3>Select Category:</h3>\n        <div className=\"category-buttons\">\n          {Object.entries(CATEGORIES).map(([key, value]) => (\n            <button\n              key={key}\n              className={`category-btn ${selectedCategory === key ? 'selected' : ''}`}\n              onClick={() => handleCategorySelect(key)}\n            >\n              {value.name}\n              <span className=\"points\">({value.points} pts)</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {showResult && (\n        <div className={`result-message ${showResult}`}>\n          {showResult === 'correct' ? 'Correct!' : 'Wrong!'}\n        </div>\n      )}\n\n      <AnswerModal \n        isOpen={showAnswerModal}\n        onClose={() => setShowAnswerModal(false)}\n        onSubmit={handleModalSubmit}\n        questionType={currentQuestionType}\n        currentPhrase={currentPhrase}\n      />\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}