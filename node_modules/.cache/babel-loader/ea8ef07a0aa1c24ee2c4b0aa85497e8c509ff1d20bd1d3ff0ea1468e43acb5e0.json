{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/GamePresenter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MagicalQuestionCard from \"./MagicalQuestionCard\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport useSound from 'use-sound';\nimport correctSound from '../assets/sounds/correct.mp3';\nimport wrongSound from '../assets/sounds/wrong.mp3';\nimport confetti from 'canvas-confetti';\nimport { getPhrase, checkAnswer } from '../services/aiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = {\n  SONG: {\n    name: 'Song',\n    points: 1\n  },\n  MOVIE: {\n    name: 'Movie',\n    points: 2\n  },\n  FAMOUS_PERSON: {\n    name: 'Famous Person',\n    points: 3\n  },\n  FICTIONAL_CHARACTER: {\n    name: 'Fictional Character',\n    points: 3\n  },\n  BOOK: {\n    name: 'Book',\n    points: 4\n  },\n  POET: {\n    name: 'Poet',\n    points: 5\n  },\n  QUOTE: {\n    name: 'Quote',\n    points: 6\n  }\n};\nconst DIFFICULTIES = {\n  EASY: {\n    color: '#4CAF50',\n    multiplier: 1\n  },\n  MEDIUM: {\n    color: '#FFC107',\n    multiplier: 1.5\n  },\n  HARD: {\n    color: '#F44336',\n    multiplier: 2\n  }\n};\nconst GamePresenter = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [numberOfRounds, setNumberOfRounds] = useState(5);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPhrase, setCurrentPhrase] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [difficulty, setDifficulty] = useState('MEDIUM');\n  const [retryCount, setRetryCount] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [playCorrect] = useSound(correctSound);\n  const [playWrong] = useSound(wrongSound);\n  const startGame = () => {\n    setGameStarted(true);\n    // Here we'll add the API call to get the first phrase\n  };\n  const handleError = (error, action) => {\n    var _error$response, _error$response2, _error$response3;\n    console.error(\"Error during \".concat(action, \":\"), error);\n    if (error.message.includes('API key')) {\n      setErrorMessage('API configuration error. Please check your settings.');\n    } else if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429) {\n      setErrorMessage('Too many requests. Please wait a moment and try again.');\n    } else {\n      setErrorMessage(\"Failed to \".concat(action, \". Please try again.\"));\n    }\n\n    // Auto-retry for certain errors\n    if (retryCount < 3 && (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 429 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 503)) {\n      setRetryCount(prev => prev + 1);\n      setTimeout(() => handleCategorySelect(selectedCategory), 2000 * Math.pow(2, retryCount));\n    }\n  };\n  const handleCategorySelect = async category => {\n    setLoading(true);\n    setErrorMessage(null);\n    try {\n      const phraseData = await getPhrase(category, difficulty);\n      setCurrentPhrase(phraseData);\n      setSelectedCategory(category);\n      setTriggerEffect(prev => prev + 1);\n      setRetryCount(0); // Reset retry count on success\n    } catch (error) {\n      handleError(error, 'fetch phrase');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleYearGuess = e => {\n    setYearGuess(e.target.value);\n  };\n  const submitGuess = async (userAnswer, yearGuess) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await checkAnswer(userAnswer, currentPhrase, selectedCategory);\n      if (result.isCorrect) {\n        playCorrect();\n        confetti({\n          particleCount: 100,\n          spread: 70,\n          origin: {\n            y: 0.6\n          }\n        });\n\n        // Calculate points\n        let points = CATEGORIES[selectedCategory].points;\n        if (parseInt(yearGuess) === currentPhrase.year) {\n          points *= 2; // Double points for correct year\n        }\n        setScore(prev => prev + points);\n\n        // Show success message\n        setShowResult({\n          correct: true,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      } else {\n        playWrong();\n        setShowResult({\n          correct: false,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      }\n    } catch (err) {\n      setError('Failed to check answer. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculatePoints = (result, yearCorrect) => {\n    const basePoints = CATEGORIES[selectedCategory].points;\n    const difficultyMultiplier = DIFFICULTIES[difficulty].multiplier;\n    let points = basePoints * difficultyMultiplier;\n\n    // Add partial credit if available\n    if (result.partialCredit && result.partialCredit > 0) {\n      points *= result.partialCredit / 100;\n    }\n\n    // Double points for correct year\n    if (yearCorrect) points *= 2;\n    return Math.round(points);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [!gameStarted ? /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      className: \"game-setup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Legendary Lines Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"difficulty-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-buttons\",\n          children: Object.keys(DIFFICULTIES).map(diff => /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            className: \"difficulty-btn \".concat(difficulty === diff ? 'selected' : ''),\n            style: {\n              backgroundColor: DIFFICULTIES[diff].color,\n              opacity: difficulty === diff ? 1 : 0.7\n            },\n            onClick: () => setDifficulty(diff),\n            children: [diff, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"multiplier\",\n              children: [DIFFICULTIES[diff].multiplier, \"x points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, diff, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounds-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of Rounds:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: numberOfRounds,\n          onChange: e => setNumberOfRounds(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"start-btn\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Round \", currentIndex + 1, \" of \", numberOfRounds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MagicalQuestionCard, {\n        question: (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.phrase) || \"Select a category to begin\",\n        triggerEffect: triggerEffect,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-grid\",\n        children: Object.entries(CATEGORIES).map(_ref => {\n          let [key, category] = _ref;\n          return /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            className: \"category-btn \".concat(selectedCategory === key ? 'selected' : ''),\n            onClick: () => handleCategorySelect(key),\n            children: [category.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"points\",\n              children: [\"(\", category.points, \" pts)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), selectedCategory && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"guess-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your answer...\",\n          className: \"answer-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-guess\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Year (optional)\",\n            value: yearGuess,\n            onChange: handleYearGuess,\n            className: \"year-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bonus-text\",\n            children: \"Double points for correct year!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitGuess(),\n          className: \"submit-btn\",\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this), loading && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"loading-spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: errorMessage && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        className: \"error-message\",\n        children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setErrorMessage(null),\n          className: \"dismiss-error\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePresenter, \"sGnPaPLUA4P9hbqU/DjRLllMBcA=\", false, function () {\n  return [useSound, useSound];\n});\n_c = GamePresenter;\nexport default GamePresenter;\nvar _c;\n$RefreshReg$(_c, \"GamePresenter\");","map":{"version":3,"names":["React","useState","useEffect","MagicalQuestionCard","motion","AnimatePresence","useSound","correctSound","wrongSound","confetti","getPhrase","checkAnswer","jsxDEV","_jsxDEV","Fragment","_Fragment","CATEGORIES","SONG","name","points","MOVIE","FAMOUS_PERSON","FICTIONAL_CHARACTER","BOOK","POET","QUOTE","DIFFICULTIES","EASY","color","multiplier","MEDIUM","HARD","GamePresenter","_s","currentIndex","setCurrentIndex","score","setScore","selectedCategory","setSelectedCategory","numberOfRounds","setNumberOfRounds","gameStarted","setGameStarted","currentPhrase","setCurrentPhrase","yearGuess","setYearGuess","triggerEffect","setTriggerEffect","showResult","setShowResult","loading","setLoading","error","setError","difficulty","setDifficulty","retryCount","setRetryCount","errorMessage","setErrorMessage","playCorrect","playWrong","startGame","handleError","action","_error$response","_error$response2","_error$response3","console","concat","message","includes","response","status","prev","setTimeout","handleCategorySelect","Math","pow","category","phraseData","handleYearGuess","e","target","value","submitGuess","userAnswer","result","isCorrect","particleCount","spread","origin","y","parseInt","year","correct","explanation","similarity","err","calculatePoints","yearCorrect","basePoints","difficultyMultiplier","partialCredit","round","className","children","div","initial","opacity","animate","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","diff","button","whileHover","scale","whileTap","style","backgroundColor","onClick","type","min","max","onChange","question","phrase","entries","_ref","key","placeholder","exit","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/GamePresenter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MagicalQuestionCard from \"./MagicalQuestionCard\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport useSound from 'use-sound';\nimport correctSound from '../assets/sounds/correct.mp3';\nimport wrongSound from '../assets/sounds/wrong.mp3';\nimport confetti from 'canvas-confetti';\nimport { getPhrase, checkAnswer } from '../services/aiService';\n\nconst CATEGORIES = {\n  SONG: { name: 'Song', points: 1 },\n  MOVIE: { name: 'Movie', points: 2 },\n  FAMOUS_PERSON: { name: 'Famous Person', points: 3 },\n  FICTIONAL_CHARACTER: { name: 'Fictional Character', points: 3 },\n  BOOK: { name: 'Book', points: 4 },\n  POET: { name: 'Poet', points: 5 },\n  QUOTE: { name: 'Quote', points: 6 }\n};\n\nconst DIFFICULTIES = {\n  EASY: { color: '#4CAF50', multiplier: 1 },\n  MEDIUM: { color: '#FFC107', multiplier: 1.5 },\n  HARD: { color: '#F44336', multiplier: 2 }\n};\n\nconst GamePresenter = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [numberOfRounds, setNumberOfRounds] = useState(5);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPhrase, setCurrentPhrase] = useState(null);\n  const [yearGuess, setYearGuess] = useState(\"\");\n  const [triggerEffect, setTriggerEffect] = useState(0);\n  const [showResult, setShowResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [difficulty, setDifficulty] = useState('MEDIUM');\n  const [retryCount, setRetryCount] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [playCorrect] = useSound(correctSound);\n  const [playWrong] = useSound(wrongSound);\n\n  const startGame = () => {\n    setGameStarted(true);\n    // Here we'll add the API call to get the first phrase\n  };\n\n  const handleError = (error, action) => {\n    console.error(`Error during ${action}:`, error);\n    \n    if (error.message.includes('API key')) {\n      setErrorMessage('API configuration error. Please check your settings.');\n    } else if (error.response?.status === 429) {\n      setErrorMessage('Too many requests. Please wait a moment and try again.');\n    } else {\n      setErrorMessage(`Failed to ${action}. Please try again.`);\n    }\n\n    // Auto-retry for certain errors\n    if (retryCount < 3 && (error.response?.status === 429 || error.response?.status === 503)) {\n      setRetryCount(prev => prev + 1);\n      setTimeout(() => handleCategorySelect(selectedCategory), 2000 * Math.pow(2, retryCount));\n    }\n  };\n\n  const handleCategorySelect = async (category) => {\n    setLoading(true);\n    setErrorMessage(null);\n    \n    try {\n      const phraseData = await getPhrase(category, difficulty);\n      setCurrentPhrase(phraseData);\n      setSelectedCategory(category);\n      setTriggerEffect(prev => prev + 1);\n      setRetryCount(0); // Reset retry count on success\n    } catch (error) {\n      handleError(error, 'fetch phrase');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleYearGuess = (e) => {\n    setYearGuess(e.target.value);\n  };\n\n  const submitGuess = async (userAnswer, yearGuess) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await checkAnswer(userAnswer, currentPhrase, selectedCategory);\n      \n      if (result.isCorrect) {\n        playCorrect();\n        confetti({\n          particleCount: 100,\n          spread: 70,\n          origin: { y: 0.6 }\n        });\n        \n        // Calculate points\n        let points = CATEGORIES[selectedCategory].points;\n        if (parseInt(yearGuess) === currentPhrase.year) {\n          points *= 2; // Double points for correct year\n        }\n        setScore(prev => prev + points);\n        \n        // Show success message\n        setShowResult({\n          correct: true,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      } else {\n        playWrong();\n        setShowResult({\n          correct: false,\n          message: result.explanation,\n          similarity: result.similarity\n        });\n      }\n      \n    } catch (err) {\n      setError('Failed to check answer. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculatePoints = (result, yearCorrect) => {\n    const basePoints = CATEGORIES[selectedCategory].points;\n    const difficultyMultiplier = DIFFICULTIES[difficulty].multiplier;\n    let points = basePoints * difficultyMultiplier;\n    \n    // Add partial credit if available\n    if (result.partialCredit && result.partialCredit > 0) {\n      points *= (result.partialCredit / 100);\n    }\n    \n    // Double points for correct year\n    if (yearCorrect) points *= 2;\n    \n    return Math.round(points);\n  };\n\n  return (\n    <div className=\"game-container\">\n      {!gameStarted ? (\n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className=\"game-setup\"\n        >\n          <h1>Legendary Lines Game</h1>\n          \n          {/* Difficulty Selection */}\n          <div className=\"difficulty-selector\">\n            <h3>Select Difficulty:</h3>\n            <div className=\"difficulty-buttons\">\n              {Object.keys(DIFFICULTIES).map(diff => (\n                <motion.button\n                  key={diff}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  className={`difficulty-btn ${difficulty === diff ? 'selected' : ''}`}\n                  style={{ \n                    backgroundColor: DIFFICULTIES[diff].color,\n                    opacity: difficulty === diff ? 1 : 0.7 \n                  }}\n                  onClick={() => setDifficulty(diff)}\n                >\n                  {diff}\n                  <span className=\"multiplier\">\n                    {DIFFICULTIES[diff].multiplier}x points\n                  </span>\n                </motion.button>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"rounds-selector\">\n            <label>Number of Rounds:</label>\n            <input \n              type=\"number\" \n              min=\"1\" \n              max=\"20\" \n              value={numberOfRounds}\n              onChange={(e) => setNumberOfRounds(parseInt(e.target.value))}\n            />\n          </div>\n          <button onClick={startGame} className=\"start-btn\">\n            Start Game\n          </button>\n        </motion.div>\n      ) : (\n        <>\n          <div className=\"game-header\">\n            <h2>Score: {score}</h2>\n            <h3>Round {currentIndex + 1} of {numberOfRounds}</h3>\n          </div>\n\n          <MagicalQuestionCard \n            question={currentPhrase?.phrase || \"Select a category to begin\"} \n            triggerEffect={triggerEffect}\n            loading={loading}\n          />\n\n          <div className=\"categories-grid\">\n            {Object.entries(CATEGORIES).map(([key, category]) => (\n              <motion.button\n                key={key}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                className={`category-btn ${selectedCategory === key ? 'selected' : ''}`}\n                onClick={() => handleCategorySelect(key)}\n              >\n                {category.name}\n                <span className=\"points\">({category.points} pts)</span>\n              </motion.button>\n            ))}\n          </div>\n\n          {selectedCategory && (\n            <motion.div \n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"guess-section\"\n            >\n              <input\n                type=\"text\"\n                placeholder=\"Enter your answer...\"\n                className=\"answer-input\"\n              />\n              <div className=\"year-guess\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Year (optional)\"\n                  value={yearGuess}\n                  onChange={handleYearGuess}\n                  className=\"year-input\"\n                />\n                <span className=\"bonus-text\">Double points for correct year!</span>\n              </div>\n              <button \n                onClick={() => submitGuess()} \n                className=\"submit-btn\"\n              >\n                Submit Answer\n              </button>\n            </motion.div>\n          )}\n\n          {/* Show loading state */}\n          {loading && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"loading-spinner\"\n            >\n              Loading...\n            </motion.div>\n          )}\n          \n          {/* Show error state */}\n          {error && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"error-message\"\n            >\n              {error}\n            </motion.div>\n          )}\n        </>\n      )}\n\n      {/* Error Message Display */}\n      <AnimatePresence>\n        {errorMessage && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            className=\"error-message\"\n          >\n            {errorMessage}\n            <button \n              onClick={() => setErrorMessage(null)}\n              className=\"dismiss-error\"\n            >\n              ✕\n            </button>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default GamePresenter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}